We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit c, a, and b in any order". Examining each part, "eventually visit c" is "Fc". "eventually visit a" is "Fa". Repeat for the remaining parts. The answer is "Fc & Fa & Fb"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "reach landmarks c and b" specifies we must "eventually visit c and eventually visit b". Examining each part, "eventually visit c" is "Fc". "eventually visit b" is "Fb". The answer is "Fc & Fb"., & F a & F b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in that order" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only visit...once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit h but not until visit d" is "(!h U d)". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in that order" specifies we visit landmarks in a specific order and "without revisiting any landmark" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only visit...once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, and c in any order" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We visit a first, then b, and finally c". Examining each part, "visit b after a" is "Fa -> Fb". "visit c after b" is "Fb -> Fc". We reached the last landmark so we are done. The answer is "Fa -> Fb & Fb -> Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in sequence" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We visit a first, then b after a has been visited, and finally c after both a and b have been visited". Examining each part, "visit b after a has been visited" is "(a -> Fb)". "visit c after both a and b have been visited" is "(a & b -> Fc)". "eventually visit a" is "Fa". The answer is "Fa & (a -> Fb) & (a & b -> Fc)"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but only after we visit b and we visit b but only after we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in that order" specifies we visit landmarks in a specific order. "We visit a, then b, and finally c". Examining each part, "visit b after a" is "Fa -> Fb". "visit c after b" is "Fb -> Fc". We reached the last landmark so we are done. The answer is "Fa -> Fb & Fb -> Fc"., F & a F & b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, and c in any order" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but only after we visit b and we visit b but only after we visit a". Examining each part, "visit b but only after visit a" is "(a -> Fb)". "visit c but only after visit b" is "(b -> Fc)". There are 3 landmarks so we are done. The answer is "(a -> Fb) & (b -> Fc)"., & F a & F b F c
We must eventually visit some landmarks in any order until we have visited landmarks a, b, and c. Eventually is the "F" LTL operator. "until" specifies we only visit landmarks a, b, and c after visiting other landmarks. "We eventually visit a, b, and c but not until we visit other landmarks first". Examining each part, "eventually visit a, b, and c but not until we visit other landmarks first" is "(Fa & Fb & Fc) U (!a & !b & !c)". There are no other landmarks remaining so we are done. The answer is "(Fa & Fb & Fc) U (!a & !b & !c)"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in order" specifies we visit landmarks in a specific order. "We eventually visit a, then eventually visit b, then eventually visit c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Reach landmarks a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". There are 3 landmarks so we are done. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Locate landmarks a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit locations a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
The LTL formula for "Eventually, visit landmarks C and B" is "F(C & B)". This means that eventually, at some point in the future, we will visit both landmarks C and B., & F a & F b F c
We must eventually visit some landmarks in any order at least once. Eventually is the "F" LTL operator. "at least once" specifies we must "eventually visit c, a, and b". Examining each part, "eventually visit c" is "Fc". "eventually visit a" is "Fa". "eventually visit b" is "Fb". The answer is "Fc & Fa & Fb"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, and c" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "Do not pass through" specifies we cannot visit certain landmarks when traveling to others. "You cannot revisit any landmark" specifies that we visit a landmark only once. "We visit landmarks a, b, c, d, and h in that order while avoiding certain landmarks when traveling to others and never revisit any landmark". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b and not passing through d or h" is "(!c U (b & !d & !h))". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U (b & !d & !h)) & (!d U (c & !h)) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))) & (!h U (h U (!a U b U c U d U h)))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only visit...once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "do not revisit any previously visited landmarks while traveling to the next one" specifies that we visit a landmark only once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without visiting" and "revisiting" specify we only visit one landmark after visiting another and never go back to previously visited landmarks. "First, visit a. Then, visit b without visiting c, d, or h or revisiting a. Alternatively, revisit a before visiting c without visiting d or h or revisiting a or b. After that, visit d without visiting h or revisiting a, b, or c. Finally, visit h without revisiting a, b, c, or d". Examining each part, "visit b without visiting c, d, or h or revisiting a" is "(a -> (!b U (b & !c & !d & !h)))". "revisit a before visiting c without visiting d or h or revisiting a or b" is "((!a U (a U (!a U c))) & ((!a & !b) -> (!c U !d & !h)))". Repeat for the remaining parts. The answer is "(a -> (!b U (b & !c & !d & !h))) & ((a -> (!b U (b & !c & !d & !h))) | ((!a U (a U (!a U c))) & ((!a & !b) -> (!c U !d & !h)))) & ((!c U (!d & !h)) | ((!a & !b & !c) -> (!d U !h))) & (!h U (!a & !b & !c & !d))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in sequence" specifies we visit landmarks in a specific order and "without skipping any of them" specifies that we visit each landmark only once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh"., & G F a & G F b & G F c & G F d G F h
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "infinitely many times" specifies we must "eventually visit a, b, c, d, and h forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc & GFd & GFh"., & G F a & G F b & G F c & G F d G F h
We must visit some landmarks in a certain order without interruption. Always is the "G" LTL operator. "without interruption" specifies we visit all landmarks without skipping any. "We always visit a, then b, then c, then d, and finally h without interruption". Examining each part, "visit a" is "a". "visit b after a" is "a -> b". Repeat for the remaining parts. The answer is "G(a -> b) & G(b -> c) & G(c -> d) & G(d -> h)"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh"., & G F a & G F b & G F c & G F d G F h
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We visit a, then visit b, and finally visit c". Examining each part, "visit a" is "Fa". "visit b after a" is "Fa & Fb". "visit c after b and a" is "Fa & Fb & Fc". We reached the last landmark so we are done. The answer is "Fa & Fb & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We must always visit some landmarks in a certain order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "G a". "always visit b" is "G b". Repeat for the remaining parts. The answer is "G a & G b & G c"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "exactly once" specifies we visit a landmark only once. "First, visit landmark a exactly once" is "(!a U (a & (!a U (!b U (!c U (!d U h))))))". "Then, at some point in time, visit landmark b exactly once" is "(a & (!b U (!a U (!c U (!d U h)))) & (!a U b))". "After that, visit landmark c exactly once in the future" is "(a & b & (!c U (!a U (!b U (!d U h)))) & (!a U (!b U c)))". "Finally, visit landmark d exactly once, followed by a visit to landmark h" is "(a & b & c & (!d U (!a U (!b U (!c U (!h U (d & h)))))) & (!a U (!b U (!c U d))))". The answer is "(!a U (a & (!a U (!b U (!c U (!d U h)))))) & (a & (!b U (!a U (!c U (!d U h)))) & (!a U b)) & (a & b & (!c U (!a U (!b U (!d U h)))) & (!a U (!b U c))) & (a & b & c & (!d U (!a U (!b U (!c U (!h U (d & h)))))) & (!a U (!b U (!c U d))))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "exactly once" specifies we visit a landmark only once. "while avoiding" and "then" specify we only visit one landmark after visiting another. "We visit each landmark only once except for the last landmark, h. We do not visit b unless we have already visited a. We do not visit c unless we have already visited b. We do not visit d unless we have already visited c. We do not visit h unless we have already visited d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit h but not until visit d" is "(!h U d)". "visit a only once" is (!a U (a U (!a U b))). There are no other landmarks remaining besides the last landmark h so we are done. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))) & (!h U (h U (!h)))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" specifies we visit a landmark only once. "We visit landmarks in the order a, b, c, d, and h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit h but not until visit d" is "(!h U d)". "visit a only once" is (!a U (a U (!a U b))). Repeat for the remaining landmarks except for landmark h. There are no other landmarks remaining besides the last landmark h so we are done. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))) & (!h U (h U true))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in any order" specifies we must "eventually visit a, b, and c in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc"., & F a & F b F c
We must visit some landmarks in a certain order and always do so. Always is the "G" LTL operator. "then" specifies we visit landmarks in a specific order. "We always visit h, then d, then c, then b, and finally a". Examining each part, "visit a" is "a". "visit b then a" is "b & (a U b)". "visit c then b and a" is "c & (b & (a U b))". "visit d then c, b, and a" is "d & (c & (b & (a U b)))". "visit h then d, c, b, and a" is "h & (d & (c & (b & (a U b)))))". The answer is "G(h & (d & (c & (b & (a U b))))))"., & G F a & G F b & G F c & G F d G F h
We must eventually visit some landmarks in a certain order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always visit" specifies we visit each landmark in a specific order. "Repeat this sequence infinitely" specifies we repeat the sequence of visiting landmarks forever. "We always visit b, then c, then a, then d, and finally h". Examining each part, "visit b" is "Fb". "visit c after b" is "(Fb & Fc)". Repeat for the remaining parts. "eventually visit h" is "Fh". "repeat this sequence infinitely" is "G(Fb & Fc & Fa & Fd & Fh)". The answer is "G(Fb & Fc & Fa & Fd & Fh)"., & G F a & G F b & G F c & G F d G F h
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "repeatedly in an infinite loop" specifies we must "eventually visit a, d, c, h, and b forever and repeat this sequence infinitely". Examining each part, "eventually visit a, d, c, h, and b forever" is "GF(a & Fd & Fc & Fh & Fb)". "repeat this sequence infinitely" is "G(a & Fd & Fc & Fh & Fb) -> (X(a & Fd & Fc & Fh & Fb))". The answer is "GF(a & Fd & Fc & Fh & Fb) & G(a & Fd & Fc & Fh & Fb) -> (X(a & Fd & Fc & Fh & Fb))"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order and do so repeatedly. Always is the "G" LTL operator. Repeatedly is the "F" LTL operator. "visit landmarks a, b, c, d, and h" is "G(a & b & c & d & h)". The answer is "G(a & b & c & d & h) & F(a & b & c & d & h)"., & G F a & G F b & G F c & G F d G F h
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit d, then h, then b, then c, and finally a". Examining each part, "eventually visit a" is "Fa". "visit c and then a" is "(Fc & Fa)". Repeat for the remaining parts. The answer is "Fd & Fh & Fb & (Fc & Fa)"., & G F a & G F b & G F c & G F d G F h
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We visit a, then b, then c". Examining each part, "visit a" is "Fa". "visit b after a" is "Fa -> Fb". "visit c after b" is "Fb -> Fc". We reached the last landmark so we are done. The answer is "Fa & (Fa -> Fb) & (Fb -> Fc)"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually move to c but only after moving to b and we move to b but only after moving to a". Examining each part, "move to b but only after moving to a" is "(a -> Fb)". "move to c but only after moving to b" is "(b -> Fc)". There are no other landmarks remaining besides the last landmark c so we are done. The answer is "(a -> Fb) & (b -> Fc)"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but only after we visit b and we visit b but only after we visit a". Examining each part, "visit b but only after visit a" is "(a -> Fb)". "visit c but only after visit b" is "(b -> Fc)". There are 3 landmarks so we are done. The answer is "(a -> Fb) & (b -> Fc)"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We first visit a, then visit b, and finally reach c". Examining each part, "visit b after visiting a" is "Fa -> Fb". "visit c after visiting b" is "Fb -> Fc". We reached the first landmark so we are done. The answer is "Fa -> Fb & Fb -> Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We move to a, then move to b, and finally reach c". Examining each part, "move to a" is "Fa". "move to b after a" is "Fa -> Fb". "reach c after b" is "Fb -> Fc". We reached the first landmark so we are done. The answer is "Fa & (Fa -> Fb) & (Fb -> Fc)"., F & a F & b F c
We must visit some landmarks in a certain order repeatedly and forever. Repeatedly is the "G" LTL operator. Forever is the "G" LTL operator. "Always visit" specifies we must "visit c, a, d, h, and b repeatedly and forever". Examining each part, "visit c, a, d, h, and b repeatedly" is "G(c & Ga & Gd & Gh & Gb)". There are 5 landmarks so we are done. The answer is "G(c & Ga & Gd & Gh & Gb)"., & G F a & G F b & G F c & G F d G F h
We must eventually visit some landmarks in any order and do so repeatedly without any restrictions. Eventually is the "F" LTL operator. Repeatedly is the "G" LTL operator. "without any restrictions" specifies we can visit the landmarks in any order and repeatedly. "We eventually visit a, b, h, d, and c repeatedly without any restrictions". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. "repeatedly visit a, b, h, d, and c" is "G(a & b & h & d & c)". The answer is "Fa & Fb & Fh & Fd & Fc & G(a & b & h & d & c)"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in a certain order. Always is the "G" LTL operator. "You must always go to landmarks d, c, h, b, and a" specifies we must "always visit d, then c, then h, then b, and finally a". Examining each part, "always visit a" is "G a". "always visit b after a" is "G (a -> G b)". Repeat for the remaining parts. The answer is "G d & G (d -> G c) & G (c -> G h) & G (h -> G b) & G (b -> G a)"., & G F a & G F b & G F c & G F d G F h
We must continuously visit some landmarks in a certain order. Continuously is the "G" LTL operator. "visit landmarks c, a, h, b, and d" specifies we must "continuously visit c, then a, then h, then b, and then d". Examining each part, "continuously visit c" is "Gc". "visit a after c" is "Fc & G(a -> (c U a))". "visit h after a and c" is "Fh & G(h -> (a & c U h))". "visit b after h, a, and c" is "Fb & G(b -> (h & a & c U b))". "visit d after b, h, a, and c" is "Fd & G(d -> (b & h & a & c U d))". The answer is "Gc & Fc & G(a -> (c U a)) & Fh & G(h -> (a & c U h)) & Fb & G(b -> (h & a & c U b)) & Fd & G(d -> (b & h & a & c U d))"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "explore" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "G a". "always visit b" is "G b". Repeat for the remaining parts. The answer is "G a & G b & G c & G d & G h"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit landmarks a, b, c, d, and h" is "(a & b & c & d & h)". There are 5 landmarks so we are done. The answer is "G(a & b & c & d & h)"., & G F a & G F b & G F c & G F d G F h
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit landmarks a, b, c, d, and h in any order" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order and do so repeatedly. Always is the "G" LTL operator. Repeatedly is the "F" LTL operator. "visit landmarks a, b, c, d, and h in any order" is "(Fa & Fb & Fc & Fd & Fh)". Combining this logic, we always visit these landmarks and do so repeatedly. The answer is "G(Fa & Fb & Fc & Fd & Fh)"., & G F a & G F b & G F c & G F d G F h
We must continuously visit some landmarks in any order. Continuously is the "G" LTL operator. "visit" specifies we must "continuously visit a, b, c, d, and h". Examining each part, "continuously visit a" is "Ga". "continuously visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit landmarks a, b, c, d, and h in any order" specifies we must "always eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "G(Fa & Fb & Fc & Fd & Fh)"., & G F a & G F b & G F c & G F d G F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "not revisit any of the landmarks before completing the task" specifies that we visit a landmark only once. "We eventually visit H but not until we visit D and we visit D but not until we visit C and we visit C but not until we visit B and we eventually visit B but not until we visit A". Examining each part, "visit B but not until visit A" is "(!B U A)". "visit C but not until visit B" is "(!C U B)". Repeat for the remaining parts. "eventually visit H" is "FH". "visit A only once" is (!A U (A U (!A U B))). "visit B only once" is (!B U (B U (!B U C))). Repeat for the remaining landmarks except for landmark H. The answer is "(!B U A) & (!C U B) & (!D U C) & (!H U D) & FH & (!A U (A U (!A U B))) & (!B U (B U (!B U C))) & (!C U (C U (!C U D))) & (!D U (D U (!D U H)))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without revisiting" specifies we cannot visit a landmark again before visiting other landmarks. "We eventually visit H but not until we visit D and we visit D but not until we visit C and we visit C but not until we visit B and we eventually visit B but not until we visit A". Examining each part, "visit B but not until visit A" is "(!B U A)". "visit C but not until visit B" is "(!C U B)". Repeat for the remaining parts. "eventually visit H" is "FH". The answer is "(!B U A) & (!C U B) & (!D U C) & (!H U D) & FH"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "only once" specifies we visit a landmark only once. "First, visit landmark A only once. Then, visit landmark B only once. After that, visit landmark C only once. Once you have visited C, visit landmark D only once. Finally, visit landmark H, but only after you have visited D." Examining each part, "visit B but not until visit A" is "(!B U A)". "visit C but not until visit B" is "(!C U B)". "visit D but not until visit C" is "(!D U C)". "visit H but not until visit D" is "(!H U D)". "visit A only once" is (!A U (A U (!A U B))). Repeat for the remaining landmarks. The answer is "(!B U A) & (!C U B) & (!D U C) & (!H U D) & (!A U (A U (!A U B))) & (!B U (B U (!B U C))) & (!C U (C U (!C U D)))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "without revisiting" specifies we never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in the exact order given" specifies we visit landmarks in a specific order and "cannot revisit any location once you leave it" specifies that we visit a landmark only once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only visit...once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d and h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))) & (!h U F h)"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We visit a first, then b, and finally c". Examining each part, "visit b after visit a" is "Fa -> Fb". "visit c after visit b" is "Fb -> Fc". We reached the last landmark so we are done. The answer is "Fa -> Fb & Fb -> Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "First" and "Then" specify we visit landmarks in a specific order. "Finally" specifies we visit the last landmark. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit A and then B and then C". Examining each part, "eventually visit A and then B" is "Fa & Fb". "eventually visit C" is "Fc". The answer is "Fa & Fb & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We visit b but not until we visit a and we visit c but not until we visit b". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". The answer is "(!b U a) & (!c U b)"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We first visit a, then visit b, and finally visit c". Examining each part, "visit b after visiting a" is "Fa -> Fb". "visit c after visiting b" is "Fb -> Fc". We reached the last landmark so we are done. The answer is "Fa -> Fb & Fb -> Fc"., F & a F & b F c
We must always visit some landmarks in any order and do so repeatedly. Always is the "G" LTL operator. Repeatedly is the "F" LTL operator. "visit landmarks a, b, c, d, and h" is "G(a & b & c & d & h)". The answer is "G(a & b & c & d & h) & F(a & b & c & d & h)"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh"., & G F a & G F b & G F c & G F d G F h
We must always visit some landmarks in any order and do so repeatedly. Always is the "G" LTL operator. Repeatedly is the "F" LTL operator. "visit a, b, c, d, and h" is "a & b & c & d & h". The answer is "G(F(a & b & c & d & h))"., & G F a & G F b & G F c & G F d G F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" specifies that we visit a landmark only once. "We visit landmarks in the order a, b, c, d, and h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. There are no other landmarks remaining besides the last landmark h so we are done. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d)"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "while avoiding" and "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit h but not until visit d" is "(!h U d)". "visit a only once" is (!a U (a U (!a U b))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))) & Fh"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "without visiting" specifies we cannot visit certain landmarks until we visit others first. "We visit each landmark only once except for the last landmark, H". Examining each part, "visit B once without visiting C" is "(G(!C U B))". "visit C once without visiting D" is "(G(!D U C))". "visit D once without visiting H" is "(G(!H U D))". "eventually visit H" is "F H". "visit A only once" is (!A U (A U (!A U B))). There are no other landmarks remaining besides the last landmark H so we are done. The answer is "(!A U (A U (!A U B))) & (G(!C U B)) & (G(!D U C)) & (G(!H U D)) & F H"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "while staying away from the next landmark" specifies we only visit one landmark after staying away from the next landmark. "without revisiting any previous landmarks" specifies that we visit a landmark only once. "We visit landmarks in sequence while staying away from the next landmark until reaching the final landmark without revisiting any previous landmarks". Examining each part, "visit b but not until stay away from a" is "(b U !a)". "visit c but not until stay away from b" is "(c U !b)". Repeat for the remaining parts. There are no other landmarks remaining besides the last landmark d so we are done. The answer is "(b U !a) & (c U !b) & (d U !c)"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "First" and "Then" specify we visit landmarks in a specific order and "only once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks except for the last landmark. "We eventually visit H but not until we visit D and we visit D but not until we visit C and we visit C but not until we visit B and we eventually visit B but not until we visit A. We visit each landmark only once except for the last landmark, H". Examining each part, "visit B but not until visit A" is "(!B U A)". "visit C but not until visit B" is "(!C U B)". Repeat for the remaining parts. "visit H but not until visit D" is "(!H U D)". "visit A only once" is (!A U (A U (!A U B))). "visit B only once" is (!B U (B U (!B U C))). Repeat for the remaining landmarks except for landmark H. The answer is "(!B U A) & (!C U B) & (!D U C) & (!H U D) & (!A U (A U (!A U B))) & (!B U (B U (!B U C))) & (!C U (C U (!C U D))) & (!D U (D U (!D U H))) & (!H U (A & B & C & D))"., & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but only after we visit b and we visit b but only after we visit a". Examining each part, "visit b but only after visit a" is "(a -> Fb)". "visit c but only after visit b" is "(b -> Fc)". There are 3 landmarks so we are done. The answer is "(a -> Fb) & (b -> Fc)"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We visit a, then visit b, and finally visit c". Examining each part, "visit a" is "Fa". "visit b after a" is "Fa & Fb". "visit c after b" is "Fa & Fb & Fc". We reached the last landmark so we are done. The answer is "Fa & Fb & Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We first visit a, then visit b, and finally visit c". Examining each part, "visit b after visiting a" is "Fa -> Fb". "visit c after visiting b" is "Fb -> Fc". We reached the first landmark so we are done. The answer is "Fa -> Fb -> Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We visit a, then b, and finally c". Examining each part, "visit b after a" is "Fa -> Fb". "visit c after b" is "Fb -> Fc". We reached the last landmark so we are done. The answer is "Fa -> Fb & Fb -> Fc"., F & a F & b F c
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We visit a first, then b, and finally c". Examining each part, "visit b after a" is "Fa -> Fb". "visit c after b" is "Fb -> Fc". We reached the last landmark so we are done. The answer is "Fa -> Fb & Fb -> Fc"., F & a F & b F c
