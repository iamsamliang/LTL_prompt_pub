Parsed_output, Ground_truth, LTL_type, Num_props, Instruction, Model_output

Fc & Fb, & F a & F b F c, visit, 3, Reach landmarks c and b eventually., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "reach" specifies we must "eventually visit c and b". Examining each part, "eventually visit c" is "Fc". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fc & Fb".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then landmark b, and finally landmark c in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks in the following order: a, b, c, d, h. Only visit each landmark once. Do not visit h until you have visited d. Only visit d after you have visited c. Only visit c after you have visited b. Only visit b after you have visited a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "until" and "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))".

(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Eventually visit a, then eventually visit b, then eventually visit c, then eventually visit d, and finally visit h. Visit each landmark only once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only visit...once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit a. Then, visit b. Finally, visit c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then landmark b, and finally landmark c in sequence., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then visit b after a has been visited, and finally visit c after both a and b have been visited., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then visit landmark b, and finally visit landmark c in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "in that order" specify we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

F(a & F(b & Fc)), & F a & F b F c, visit, 3, Visit a, then visit b, then visit c., We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b and then visit c, eventually". Working backwards, "eventually, visit c" is "Fc". "eventually, visit b and then visit c" is "F(b & Fc)". "eventually, visit a and then visit b and then visit c" is "F(a & F(b & Fc))". We reached the first landmark so we are done. The answer is "F(a & F(b & Fc))".

(!b U a) & (!c U b) & Fc, & F a & F b F c, visit, 3, Keep visiting landmarks until you have visited landmarks a, b, and c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "until" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, & F a & F b F c, visit, 3, Visit landmarks a, b, and c in order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in order" specifies we visit landmarks in a specific order. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

FC & FB, & F a & F b F c, visit, 3, Eventually, visit landmarks C and B., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit C and B". Examining each part, "eventually visit C" is "FC". "eventually visit B" is "FB". There are 2 landmarks so we are done. The answer is "FC & FB".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks in the following order: a, b, c, d, h. Do not revisit any landmark. Only visit h after visiting d, visit d after visiting c, visit c after visiting b, and visit b after visiting a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" and "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then visit landmark b, then visit landmark c, then visit landmark d, and finally visit landmark h. Do not revisit any previously visited landmarks while traveling to the next one., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "Do not revisit any previously visited landmarks while traveling to the next one." specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))".

Ga & Gb & Gc, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, First, visit landmark a exactly once. Then, at some point in time, visit landmark b exactly once. After that, visit landmark c exactly once in the future. Finally, visit landmark d exactly once, followed by a visit to landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" and "after that" specify we only visit one landmark after visiting another. "exactly once" specifies we visit a landmark only once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))".

(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then visit landmark b, then visit landmark c, then visit landmark d, and finally visit landmark h. Make sure to visit each landmark exactly once and follow this exact order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "exactly once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))".

(!d U h) & (!c U d) & (!b U c) & (!a U b) & Fa, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit h, then d, then c, then b, and finally a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit a but not until we visit b and we visit b but not until we visit c and we visit c but not until we visit d and we eventually visit d but not until we visit h". Examining each part, "visit d but not until visit h" is "(!d U h)". "visit c but not until visit d" is "(!c U d)". Repeat for the remaining parts. "eventually visit a" is "Fa". The answer is "(!d U h) & (!c U d) & (!b U c) & (!a U b) & Fa".

(!b U c) & (!a U c) & (!d U a) & (!h U d) & Fh & G(!b U c) & G(!a U c) & G(!d U a) & G(!h U d), & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit b, then c, then a, then d, and finally h. Repeat this sequence infinitely., We must eventually visit some landmarks in a certain order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must visit the landmarks in a certain order forever. "We eventually visit h but not until we visit d and we visit d but not until we visit a and we visit a but not until we visit c and we eventually visit c but not until we visit b". Examining each part, "visit b but not until visit c" is "(!b U c)". "visit a but not until visit c" is "(!a U c)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U c) & (!a U c) & (!d U a) & (!h U d) & Fh & G(!b U c) & G(!a U c) & G(!d U a) & G(!h U d)".

F(d & F(h & F(b & F(c & Fa)))), & G F a & G F b & G F c & G F d G F h, patrolling, 5, Visit d, then h, then b, then c, and finally a., We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must visit "d and then visit h and then visit b and then visit c and then visit a, eventually". Working backwards, "eventually, visit a" is "Fa". "eventually, visit c and then visit a" is "F(c & Fa)". "eventually, visit b and then c and then visit a" is "F(b & F(c & Fa))". Keep doing this until we reach the first landmark. The answer is "F(d & F(h & F(b & F(c & Fa))))".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, visit landmark b. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, visit landmark b. Finally, reach landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Move to a, then move to b, and finally reach c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Gc & Ga & Gh & Gb & Gd, & G F a & G F b & G F c & G F d G F h, patrolling, 5, You must continuously visit landmarks c, a, h, b, and d., We must continuously visit some landmarks in any order. Continuously is the "G" LTL operator. "visit" specifies we must "continuously visit c, a, h, b, and d". Examining each part, "continuously visit c" is "Gc". "continuously visit a" is "Ga". Repeat for the remaining parts. The answer is "Gc & Ga & Gh & Gb & Gd".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Visit landmarks a, b, c, d, and h in any order., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark A, then landmark B, then landmark C, then landmark D, and finally landmark H. Do not revisit any of the landmarks before completing the task., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "do not revisit" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark A, then visit landmark B without revisiting A before. After visiting B, visit landmark C without revisiting A or B before. After visiting C, visit landmark D without revisiting A, B, or C before. Finally, after visiting D, visit landmark H without revisiting A, B, C, or D before., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "without revisiting" specify we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, First, visit landmark A only once. Then, visit landmark B only once. After that, visit landmark C only once. Once you have visited C, visit landmark D only once. Finally, visit landmark H, but only after you have visited D., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" and "after that" specify we only visit one landmark after visiting another. "only once" specifies that we visit a landmark only once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then visit landmark b without revisiting a. After that, visit landmark c without revisiting b. Then, visit landmark d without revisiting c. Finally, visit landmark h without revisiting d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "without revisiting" specify we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, visit landmark b. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, go to landmark a. Then, visit landmark b. Finally, reach landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, go to landmark A. Then, go to landmark B. After that, go to landmark C., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after that" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b), F & a F & b F c, sequenced_visit, 3, Visit b after visiting a and visit c after visiting b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". The answer is "(!b U a) & (!c U b)".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, reach a. Then, reach b. Finally, reach c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then landmark b, then landmark c, then landmark d, and finally landmark h. You can only visit each landmark once and must follow this specific order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only visit...once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark A once, then landmark B once without visiting C, then landmark C once without visiting D, then landmark D once without visiting H, and finally visit landmark H., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only visit...once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "visit h but not until we visit d" is "(!h U d)". "eventually visit h" is "Fh". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))".

(!b U a) & (!c U b) & (!final U c) & Ffinal & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U final))), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks in sequence while staying away from the next landmark until reaching the final landmark without revisiting any previous landmarks., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in sequence" and "until" specify we only visit one landmark after visiting another. "staying away from the next landmark" specifies we cannot visit the next landmark until we visit the current landmark. "without revisiting any previous landmarks" specifies we never go back to previously visited landmarks. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit the final landmark but not until we visit the previous landmark. We visit each landmark only once except for the last landmark". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit the final landmark" is "Ffinal". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for the final landmark. The answer is "(!b U a) & (!c U b) & (!final U c) & Ffinal & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U final)))".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, reach a. Then, reach b. Finally, reach c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then go to b, and finally make your way to c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, proceed to landmark b. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Accuracy: 0.5959595959595959