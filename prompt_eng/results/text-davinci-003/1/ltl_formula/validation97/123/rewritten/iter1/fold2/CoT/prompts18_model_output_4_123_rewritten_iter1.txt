We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Arrive at landmark a" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". We reached the first landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Reach" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "until" specifies we only visit one landmark after visiting another. "Only visit each landmark once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "exactly once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Go to landmark "a"" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Arrive at landmark a" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". We reached the first landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Go to" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Locate" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Move to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b, eventually" or "b and then visit a, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb) | F(b & Fa)"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit both" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "First" and "Then" specify we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & F a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "either" and "then" specify we only visit one landmark after visiting another. "We eventually visit the other landmark but not until we visit one of the landmarks". Examining each part, "visit the other landmark but not until visit one of the landmarks" is "(!a U b) & (!b U a)". The answer is "(!a U b) & (!b U a)"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Arrive at landmark a" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Locate" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Move towards" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must "visit a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & F a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must "visit a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Locate" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "without passing through" and "then" specify we only visit one landmark after visiting another. "without revisiting any previous landmarks" specifies that we visit a landmark only once. "We eventually visit D but not until we visit C and we visit C but not until we visit B and we visit B but not until we visit A. We visit each landmark only once except for the last landmark, D". Examining each part, "visit B but not until visit A" is "(!B U A)". "visit C but not until visit B" is "(!C U B)". "visit D but not until we visit C" is "(!D U C)". "eventually visit D" is "FD". "visit A only once" is (!A U (A U (!A U B))). "visit B only once" is (!B U (B U (!B U C))). Repeat for the remaining landmarks except for landmark D. The answer is "(!B U A) & (!C U B) & (!D U C) & FD & (!A U (A U (!A U B))) & (!B U (B U (!B U C))) & (!C U (C U (!C U D))) & (!D U (D U (!D U FD)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "do not revisit" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "do not revisit" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without visiting" and "without revisiting" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a without visiting b, c, or d" is "(!b & !c & !d U a)". "visit b without visiting c or d or revisiting a" is "(!c & !d & !a U b)". "visit c without visiting d or revisiting a or b" is "(!d & !a & !b U c)". "visit d without revisiting a, b, or c" is "(!a & !b & !c U d)". The answer is "(!b & !c & !d U a) & (!c & !d & !a U b) & (!d & !a & !b U c) & (!a & !b & !c U d) & Fd"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in that order" specifies we visit landmarks in a specific order and "without skipping any of them" specifies that we visit each landmark before moving on to the next. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "infinitely" specifies we must "eventually visit a, b, and c forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc"., & G F a & G F b G F c
We must visit some landmarks in any order and do so forever without interruption. Always is the "G" LTL operator. "without interruption" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "repeatedly" specifies we must "eventually visit a, b, and c forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Move to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "eventually visit a, b, and c forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order and do so at least once. Eventually is the "F" LTL operator. "at least once" specifies we must "eventually visit a, b, and c at least once". Examining each part, "eventually visit a at least once" is "F(a U b U c)". "eventually visit b at least once" is "F(b U a U c)". Repeat for the remaining parts. The answer is "F(a U b U c) & F(b U a U c) & F(c U a U b)"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "eventually visit a, b, and c forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "eventually visit a, b, and c forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Stop at" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Go to landmark "a"" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit both" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "at least once" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb"., & F a F b
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "eventually visit a, b, and c forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit c, a, and b". Examining each part, "always visit c" is "Gc". "always visit a" is "Ga". Repeat for the remaining parts. The answer is "Gc & Ga & Gb"., & G F a & G F b G F c
We must eventually visit some landmarks in a certain order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must visit a first and "repeat this pattern infinitely" specifies we must visit a, c, b, and repeat this pattern forever. Examining each part, "visit a" is "a". "eventually visit c" is "Fc". "eventually visit b" is "Fb". The answer is "a & Fc & Fb & G(a & Fc & Fb)"., & G F a & G F b G F c
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "always" specifies that we visit a landmark every time. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit a but not until we visit b and we visit b but not until we visit c. We visit each landmark every time". Examining each part, "visit b but not until visit c" is "(!b U c)". "visit a but not until visit b" is "(!a U b)". "eventually visit a" is "Fa". The answer is "(!b U c) & (!a U b) & Fa"., & G F a & G F b G F c
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "eventually visit a, b, and c forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". Repeat for the remaining parts. The answer is "GFa & GFb & GFc"., & G F a & G F b G F c
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "exactly once" specifies we visit a landmark only once. "Always stay away from" specifies we cannot visit a landmark until we visit another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). "visit c only once" is (!c U (c U (!c U d))). "visit d only once" is (!d U (d U (!d U h))). "avoid b when visiting a" is "(!b U (a U (!a U b)))". "avoid c and d when visiting a" is "(!c U (a U (!a U b))) & (!d U (a U (!a U b)))". "avoid a when visiting b" is "(!a U (b U (!b U c)))". "avoid c and d when visiting b" is "(!c U (b U (!b U c))) & (!d U (b U (!b U c)))". "avoid a and b when visiting c" is "(!a U (c U (!, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "without passing through" specifies we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we visit landmarks in a specific order and "while avoiding" specifies we cannot visit some landmarks until we visit others first. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We cannot visit b, c, and d until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in that order" specifies we visit landmarks in a specific order and "without skipping or revisiting any of them" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark h. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d))) & (!d U (d U (!d U h)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in that order" specifies we visit landmarks in a specific order and "exactly once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit c, a, and b". Examining each part, "always visit c" is "Gc". "always visit a" is "Ga". Repeat for the remaining parts. The answer is "Gc & Ga & Gb"., & G F a & G F b G F c
We must eventually visit some landmarks in a certain order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "eventually visit b and then c and then a forever". Working backwards, "eventually, visit a" is "Fa". "eventually, visit c and then visit a" is "F(c & Fa)". "eventually, visit b and then c and then visit a" is "F(b & F(c & Fa))". We reached the first landmark so we are done. The answer is "G(F(b & F(c & Fa)))"., & G F a & G F b G F c
We must always visit some landmarks in any order. Always is the "G" LTL operator. "explore" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc"., & G F a & G F b G F c
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "at least once" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Go to" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Go to landmark "a"" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Go to" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., F a
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "only once" specifies that we visit a landmark only once. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "without passing through" and "then" specify we only visit one landmark after visiting another. "exactly once" specifies we visit a landmark only once. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "always" and "after" specify we only visit one landmark after visiting another. "exactly once" specifies we visit a landmark only once. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in strict order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "in that specific order" specifies we visit landmarks in a specific order and "without revisiting" specifies that we never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without stopping" and "then" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "while avoiding" and "then" specify we only visit one landmark after visiting another. "exactly once" specifies we visit a landmark only once. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). Repeat for the remaining landmarks except for landmark d. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we never visit it again. Eventually is the "F" LTL operator. "then" and "without" specify we only visit one landmark after visiting another. "only once" specifies that we visit a landmark only once. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We visit each landmark only once except for the last landmark, d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". "visit a only once" is (!a U (a U (!a U b))). "visit b only once" is (!b U (b U (!b U c))). "visit c only once" is (!c U (c U (!c U d))). The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & (!a U (a U (!a U b))) & (!b U (b U (!b U c))) & (!c U (c U (!c U d)))"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that strict order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a. We never return to previously visited landmarks". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
