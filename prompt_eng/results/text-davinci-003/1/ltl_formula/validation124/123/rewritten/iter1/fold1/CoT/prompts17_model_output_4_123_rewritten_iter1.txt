We must eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in that order" specifies we must visit "a and then visit b and then visit c and then visit d and then visit h, eventually". Working backwards, "eventually, visit h" is "Fh". "eventually, visit d and then visit h" is "F(d & Fh)". Keep doing this until we reach the first landmark. The answer is "F(a & F(b & F(c & F(d & Fh))))"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "First" and "Then" specify we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "until finding" and "then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "!b U F(a & Fb)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "infinite number of times" specifies we must "eventually visit a forever". Examining each part, "eventually visit a forever" is "GFa". We reached the first landmark so we are done. The answer is "GFa"., G F a
We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Keep moving towards" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks in any order. Always is the "G" LTL operator. "continue going" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "go to" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit A". Examining each part, "always visit A" is "GA". We reached the first landmark so we are done. The answer is "GA"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "infinitely" specifies we must "eventually visit the landmark forever". Examining each part, "eventually visit the landmark forever" is "GF". We reached the first landmark so we are done. The answer is "GF"., G F a
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "If you have already visited a" specifies we must "visit b but not until visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while avoiding" and "after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only if" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in sequence" specifies we must visit "a and then visit b and then visit c and then visit d and then visit h, eventually". Working backwards, "eventually, visit h" is "Fh". "eventually, visit d and then visit h" is "F(d & Fh)". Keep doing this until we reach the first landmark. The answer is "F(a & F(b & F(c & F(d & Fh))))"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit both a and b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit both a and b" is "(!c U (a & b))". "visit d but not until we visit c" is "(!d U c)". "visit h but not until we visit d" is "(!h U d)". "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U (a & b)) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after that" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". The answer is "(!b U a)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we visit landmarks in a specific order and "Do not visit" specifies that we cannot visit a landmark until we visit another. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "First" and "Then" specify we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". The answer is "(!b U a)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that specific order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "directly" and "then" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in that order" specifies we must visit "a and then visit b and then visit c and then visit d, eventually". Working backwards, "eventually, visit d" is "Fd". "eventually, visit c and then visit d" is "F(c & Fd)". "eventually, visit b and then c and then visit d" is "F(b & F(c & Fd))". "eventually, visit a and then b and then c and then visit d" is "F(a & F(b & F(c & Fd)))". We reached the first landmark so we are done. The answer is "F(a & F(b & F(c & Fd)))"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "in that order" specifies we must visit "a and then visit b and then visit c and then visit d and then visit h, eventually". Working backwards, "eventually, visit h" is "Fh". "eventually, visit d and then visit h" is "F(d & Fh)". Keep doing this until we reach the first landmark. The answer is "F(a & F(b & F(c & F(d & Fh))))"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without passing through" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We cannot visit any of the other landmarks until we visit the previous landmark". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b and then visit c and then visit d, eventually". Working backwards, "eventually, visit d" is "Fd". "eventually, visit c and then visit d" is "F(c & Fd)". "eventually, visit b and then c and then visit d" is "F(b & F(c & Fd))". Keep doing this until we reach the first landmark. The answer is "F(a & F(b & F(c & Fd)))"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "without skipping" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "infinitely often" specifies we must "eventually visit a forever". Examining each part, "eventually visit a forever" is "GFa". We reached the first landmark so we are done. The answer is "GFa"., G F a
We must always visit some landmarks in the future. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "repeatedly" specifies we must "eventually visit a and b forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". We reached the first landmark so we are done. The answer is "GFa & GFb"., & G F a G F b
We must visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "visit a and b forever". Examining each part, "visit a forever" is "Ga". "visit b forever" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must eventually visit some landmarks in any order after a certain point in time. Eventually is the "F" LTL operator. "at least once" specifies we must "eventually visit a and b at least once". Examining each part, "eventually visit a at least once" is "F(a U F(a & Fb))". "eventually visit b at least once" is "F(b U F(a & Fb))". There are 2 landmarks so we are done. The answer is "F(a U F(a & Fb)) & F(b U F(a & Fb))"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "go to" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks in any order. Always is the "G" LTL operator. "stop" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks in any order. Always is the "G" LTL operator. "patrol" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "back and forth" specifies we must "eventually visit a and b forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". The answer is "GFa & GFb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Infinitely alternate" specifies we must "eventually visit a and then b forever". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit a and then b forever" is "G(Fa & Fb)". We reached the first landmark so we are done. The answer is "G(Fa & Fb)"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Keep visiting" specifies we must "eventually visit a and b forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". We reached the first landmark so we are done. The answer is "GFa & GFb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "infinite number of times" specifies we must "eventually visit a forever". Examining each part, "eventually visit a forever" is "GFa". We reached the first landmark so we are done. The answer is "GFa"., G F a
We must visit some landmarks forever. Forever is the "G" LTL operator. "Always visit" specifies we must "visit forever". Examining each part, "visit forever" is "G". We are done. The answer is "G"., G F a
We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga"., G F a
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must eventually visit some landmarks in any order and do so frequently. Eventually is the "F" LTL operator. Frequently is the "G" LTL operator. "frequently" specifies we must "eventually visit a and b frequently". Examining each part, "eventually visit a frequently" is "GFa". "eventually visit b frequently" is "GFb". There are 2 landmarks so we are done. The answer is "GFa & GFb"., & G F a G F b
We must eventually visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "repeatedly" specifies we must "eventually visit a and b forever". Examining each part, "eventually visit a forever" is "GFa". "eventually visit b forever" is "GFb". There are 2 landmarks so we are done. The answer is "GFa & GFb"., & G F a G F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after that" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "before" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. After we visit a landmark, we can visit it again. Eventually is the "F" LTL operator. "while avoiding" and "then" specify we only visit one landmark after visiting another. "multiple times" specifies we can visit a landmark multiple times. "We eventually visit D but not until we visit C and we visit C but not until we visit B and we visit B but not until we visit A. We can visit each landmark multiple times". Examining each part, "visit B but not until visit A" is "(!B U A)". "visit C but not until visit B" is "(!C U B)". "visit D but not until we visit C" is "(!D U C)". "eventually visit D" is "FD". The answer is "(!B U A) & (!C U B) & (!D U C) & FD"., & U ! b a & U ! c b & U ! d c F d
We must visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "visit a and b forever". Examining each part, "visit a forever" is "Ga". "visit b forever" is "Gb". We reached the first landmark so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must visit some landmarks in any order and do so forever. Eventually is the "F" LTL operator. Forever is the "G" LTL operator. "Always" specifies we must "visit a and b forever". Examining each part, "visit a forever" is "Ga". "visit b forever" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb"., & G F a G F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We remain at h after visiting it". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "visit h but not until we visit d" is "(!h U d)". "eventually visit h" is "Fh". "remain at h after visiting it" is "(h U Fh)". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & (h U Fh)"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in that order" specifies we must visit "a and then visit b and then visit c and then visit d and then visit h, eventually". Working backwards, "eventually, visit h" is "Fh". "eventually, visit d and then visit h" is "F(d & Fh)". Keep doing this until we reach the first landmark. The answer is "F(a & F(b & F(c & F(d & Fh))))"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we visit landmarks in a specific order and "Next" and "After that" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "strict sequential order" and "immediately after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "before" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we visit landmarks in a specific order and "do not visit" specifies we cannot visit a landmark until we visit another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "First" and "Then" specify we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "before" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "but do not visit" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We must always visit some landmarks in a certain order. Always is the "G" LTL operator. "before" specifies we must "always visit a before visiting b". Examining each part, "always visit a" is "Ga". "always visit a before visiting b" is "Ga & G(!b U a)". We reached the first landmark so we are done. The answer is "Ga & G(!b U a)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First, avoid" and "then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "without visiting any other landmarks before a" specifies that we cannot visit any other landmarks before visiting a. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit b but not until we visit a and we cannot visit any other landmarks before a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while avoiding" and "then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "then" specifies we must visit "a and then visit b, eventually". Working backwards, "eventually, visit b" is "Fb". "eventually, visit a and then visit b" is "F(a & Fb)". We reached the first landmark so we are done. The answer is "F(a & Fb)"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "then" specify we only visit one landmark after visiting another. "It is not allowed to visit landmark b before landmark a" specifies we cannot visit b until we visit a. Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb"., & U ! b a F b
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order. Eventually is the "F" LTL operator. "in that order" specifies we must visit "a and then visit b and then visit c and then visit d and then visit h, eventually". Working backwards, "eventually, visit h" is "Fh". "eventually, visit d and then visit h" is "F(d & Fh)". Keep doing this until we reach the first landmark. The answer is "F(a & F(b & F(c & F(d & Fh))))"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh"., F & a F & b F & c F & d F h
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while avoiding" and "then" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We cannot visit a, b, or c until we visit the previous landmark". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after that" specify we only visit one landmark after visiting another. "without passing" specifies we cannot visit a landmark until we visit another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order and "without visiting" specifies that we cannot visit a landmark until we visit another. Combining this logic, we only visit one landmark after visiting another and never go back to previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a. We cannot visit c until we visit b and we cannot visit d until we visit c". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", "After that", and "Finally" specify we visit landmarks in a specific order. "avoid" and "while staying away from" specify we cannot visit a landmark until we visit another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we visit landmarks in a specific order. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit d but not until we visit c" is "(!d U c)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd"., & U ! b a & U ! c b & U ! d c F d
