Parsed_output, Ground_truth, LTL_type, Num_props, Instruction, Model_output

(!b U a) & Fb, F & a F b, sequenced_visit, 2, eventually first visit a and then b after, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, visit a and then b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a and sometime afterward visit b, We eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "sometime afterward" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, visit a sometime afterwards visit b sometime afterwards visit c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "sometime afterwards" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc & (b U a) & (c U b), F & a F & b F c, sequenced_visit, 3, in some sequence visit a b and c in that order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "in some sequence" specifies we must "eventually visit a, b, and c in that order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". We must visit b after a and c after b. This is the "U" LTL operator. "visit b after a" is "(b U a)". "visit c after b" is "(c U b)". The answer is "Fa & Fb & Fc & (b U a) & (c U b)".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, eventually in some sequence visit a b c and d each must be followed by the next, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "each must be followed by the next" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, visit a then visit b then visit c then visit d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a b c d and h in this order there can be other landmarks in between, We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "in this order" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & F(a & !a), & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, only visit a once and do not visit b until you visit a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only visit" and "do not visit" specify we only visit one landmark after visiting another. "We eventually visit a once and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit a once" is "F(a & !a)". The answer is "(!b U a) & F(a & !a)".

(!b U a) & (!c U b) & Xb & Xa, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, do not visit c until you visit b visit b only once do no visit b until you visit a visit a only once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "until" and "only once" specify we only visit one landmark after visiting another and we only visit it once. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit b only once" is "Xb". "visit a only once" is "Xa". The answer is "(!b U a) & (!c U b) & Xb & Xa".

(!b U a) & (!c U b) & (!d U c) & Fa, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, do not visit d until you visit c visit c only once do not visit c until you visit b visit b only once do no visit b until you visit a visit a only once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "do not visit" and "only once" specify we only visit one landmark after visiting another and we cannot visit a landmark more than once. "We eventually visit a but not until we visit b and we visit b but not until we visit c and we visit c but not until we visit d". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit a" is "Fa". The answer is "(!b U a) & (!c U b) & (!d U c) & Fa".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit a then b then c and then d you can only visit each landmark once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & Xa & Xb & Xc & Xd & Xh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, do not visit h until you visit d visit d only once do not visit d until you visit c visit c only once do not visit c until you visit b visit b only once do no visit b until you visit a visit a only once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "do not visit" and "visit only once" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & Xa & Xb & Xc & Xd & Xh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a then b then c then d and then h visit each landmark only once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "only once" specify we only visit one landmark after visiting another and we cannot visit a landmark more than once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, eventually visit a afterward eventually visit b afterward eventually visit c afterward eventually visit d afterward eventually visit h visit each landmark only once, We eventually visit some landmarks in any order while we cannot visit any landmark more than once. Eventually is the "F" LTL operator. "afterward" specifies we must visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

Fa & Fb, F & a F b, sequenced_visit, 2, move to a then move to b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "move to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a then b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, find a first then find b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, move a then find b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a then move to b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & G(!a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, go to a exactly once while avoiding b then go to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "while avoiding" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we visit a exactly once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a exactly once" is "G(!a)". "eventually visit b" is "Fb". The answer is "(!b U a) & G(!a) & Fb".

(!b U a) & G(a & !a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, reach a exactly once while staying away from b then move to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "while staying away from" specify we must visit one landmark and not visit another. "We eventually visit b but not until we visit a and we must visit a exactly once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a exactly once" is "G(a & !a)". "eventually visit b" is "Fb". The answer is "(!b U a) & G(a & !a) & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, move to a exactly once while avoiding b then find b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "avoiding" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & G(a & !a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, navigate to a exactly once while staying away from b then you can go to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "while staying away from" specify we must visit one landmark before visiting another. "We eventually visit b but not until we visit a and we visit a exactly once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a exactly once" is "G(a & !a)". "eventually visit b" is "Fb". The answer is "(!b U a) & G(a & !a) & Fb".

(!b U a) & G(a & !a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, you must visit a exactly once while avoiding b then you can navigate to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "avoiding" specify we must visit one landmark before visiting another. "We eventually visit b but not until we visit a and we must visit a exactly once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a exactly once" is "G(a & !a)". The answer is "(!b U a) & G(a & !a) & Fb".

Fa, G F a, patrolling, 1, keep visiting a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Fa, G F a, patrolling, 1, continue moving to a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "continue moving" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Ga, G F a, patrolling, 1, do not stop visiting a, We must always visit some landmarks in any order. Always is the "G" LTL operator. "do not stop visiting" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

G(!b & !c & a) & G(!c & b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a exactly once while avoiding b and c then visit b exactly once while avoiding c finally visit c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "while avoiding" specify we must visit one landmark exactly once and avoid other landmarks. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit a exactly once while avoiding b and c" is "G(!b & !c & a)". "visit b exactly once while avoiding c" is "G(!c & b)". "eventually visit c" is "Fc". The answer is "G(!b & !c & a) & G(!c & b) & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, go to a and then go to b and then go to c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, visit a b and c one after another, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "one after another" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, go to a and go to b after a is visited and go to c after a and b are visited, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, make your way to a b and c consecutively, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "consecutively" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, head to a b and c in order, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in order" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa, G F a, patrolling, 1, keep visiting a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Fa, G F a, patrolling, 1, keep going to a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going to" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Ga, G F a, patrolling, 1, do not stop visiting a, We must always visit some landmarks in any order. Always is the "G" LTL operator. "do not stop visiting" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, visit a and visit b after a is visited, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, after you visit a go to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, after you have been to a make your way to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, go to a and move on to b once you have been to a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "once" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a and then go to b, We eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, go to a then go to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, go to b after going to a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, visit a visit b after that, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after that" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, reach a then go to b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "reach" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". "go to" specifies we must "eventually visit b". Examining each part, "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a then reach b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" and "reach" specify we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a b c d and h sequentially, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "sequentially" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

Fa & Fb & Fc & Fd & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a then visit b then visit c then visit d and then visit h, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, reach a b c d and h sequentially, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "sequentially" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(b R a) & (c R b) & (d R c) & (h R d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit b at least once after visiting a visit c at least once after visiting both a and b visit d at least once after visiting a b and c and visit h at least once after visiting a b c and d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "at least once after" specify we must visit one landmark at least once after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b at least once after visit a" is "(b R a)". "visit c at least once after visit b" is "(c R b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(b R a) & (c R b) & (d R c) & (h R d) & Fh".

Fa & Fb & Fc & Fd & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, go to a then go to b and then reach c then reach d and finally go to h, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" and "reach" specify we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd, F & a F & b F & c F d, sequenced_visit, 4, go to a and then go to b and then go to c and then go to d, We eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, visit a b c and d in this order there can be other locations in between, We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "in this order" specifies we must visit the landmarks in a certain order. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, head to a and then to b after a is visited and then to c after b is visited and then to d after c is visited, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, make sure a b c and d are all visited in this order there can be other locations in between, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "make sure" and "in this order" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, you have to walk to a and then walk to b and then walk to c and finally walk to d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

Fa & Fb & Fc & Fd & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, go to a and then go to b and then go to c and then go to d and then go to h, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a b c d and h in this order there can be other locations in between, We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "in this order" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, head to a and then to b after a is visited and then to c after b is visited and then to d after c is visited and then to h after d is visited, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, make sure a b c d and h are all visited in this order there can be other locations in between, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "make sure" and "in this order" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, you have to walk to a and then walk to b and then walk to c and then walk to d and finally walk to h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go to a but not through b c d or h and then go to b but not through c d or h and then go to c but not through d or h and then go to d but not through h and finally go to h no revisiting is allowed here, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "but not through" specifies we cannot visit certain landmarks until we visit others first. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, do not go to h until d is visited and do not go to d until c is visited and do not go to c until b is visited and do not go to b until a is visited along the path never return to previous location you have been to, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "do not go to" and "until" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, make your way to h only after going to d before that make your way to d only after going to c before that make your way to c only after going to b before that make your way to b only after going to a do not go back to the previous location you have visited while heading to the next, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U b) & (!a U c) & (!a U d) & (!b U c) & (!b U d) & (!c U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go to a but do not visit b c d or h and then go to b but do not visit c d or h or revisit a and then go to c but do not visit d or h or revisit a or b and then go to d but do not visit h or revisit a b or c and then go to h but do not revisit a b c or d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "but do not visit" and "but do not revisit" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U b) & (!a U c) & (!a U d) & (!b U c) & (!b U d) & (!c U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a b c d and h in this order without skipping any one of them do not revisit any one of them once after you have been there, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in this order" and "without skipping any one of them" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "do not revisit any one of them once after you have been there" is "G(!a & !b & !c & !d & !h)". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & G(!a & !b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, go to a but not through b c or d and then go to b but not through c or d and then go to c but not through d and finally go to d no revisiting is allowed, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "but not through" specifies we cannot visit certain landmarks until we visit others first. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & G(!X) & Fh, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, do not go to d until c is visited and do not go to c until b is visited and do not go to b until a is visited along the path never return to previous location you have been to, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "do not go to" and "until" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "never return to previous location" is "G(!X)". "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & G(!X) & Fh".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, make your way to d only after going to c before that make your way to c only after going to b before that make your way to b only after going to a do not go back to the previous location you have visited while heading to the next, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!a U b) & (!a U c) & (!b U d) & (!c U d) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, go to a but do not visit b c or d and then go to b but do not visit c or d or revisit a and then go to c but do not visit d or revisit a or b and then go to d but do not revisit a b or c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "but do not visit" and "but do not revisit" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & (!a U b) & (!a U c) & (!b U d) & (!c U d) & Fd".

(!b U a) & (!c U b) & (!d U c) & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit a b c and d in this order without skipping any one of them do not revisit any one of them once after you have been there, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in this order" and "without skipping any one of them" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "do not revisit any one of them once after you have been there" is "G(!a & !b & !c & !d)". The answer is "(!b U a) & (!c U b) & (!d U c) & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & G(!b & !c) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, go to a but not through b or c and then go to b but not through c and finally go to c no revisiting is allowed, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "but not through" specifies we cannot visit certain landmarks. "We eventually visit c but not until we visit b and we visit b but not until we visit a and we cannot visit b or c". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "no revisiting is allowed" is "G(!b & !c)". The answer is "(!b U a) & (!c U b) & G(!b & !c) & Fc".

(!b U a) & (!c U b) & G(!X), & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, do not go to c until b is visited and do not go to b until a is visited along the path never return to previous location you have been to, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "until" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we eventually visit c but not until we visit b". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "never return to previous location" is "G(!X)". The answer is "(!b U a) & (!c U b) & G(!X)".

(!b U a) & (!c U b) & G(!b & !c) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, make your way to c only after going to b before that make your way to b only after going to a do not go back to the previous location you have visited while heading to the next, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "do not go back to the previous location you have visited while heading to the next" is "G(!b & !c)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & G(!b & !c) & Fc".

(!b U a) & (!c U b) & (!a) & (!b) & (!c) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, go to a but do not visit b or c and then go to b but do not visit c or revisit a and then go to c but do not revisit a or b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "but do not visit" and "but do not revisit" specify we cannot visit certain landmarks until we visit others first. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "do not revisit a" is "(!a)". "do not revisit b" is "(!b)". "do not revisit c" is "(!c)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & (!a) & (!b) & (!c) & Fc".

(!b U a) & (!c U b) & G(!a & !b & !c) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a b and c in this order without skipping any one of them do not revisit any one of them once after you have been there, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in this order" and "without skipping any one of them" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "do not revisit any one of them once after you have been there" is "G(!a & !b & !c)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & G(!a & !b & !c) & Fc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, never stop visiting a b and c, We must always visit some landmarks in any order. Always is the "G" LTL operator. "never stop visiting" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, frequent a b and c infinitely in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "frequent" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, please keep visiting a b and c without stopping, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, keep visiting a b and c in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, never stop visiting a b c and d, We must always visit some landmarks in any order. Always is the "G" LTL operator. "never stop visiting" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, frequent a b c and d infinitely in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "frequent" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, please keep visiting a b c and d without stopping, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, keep visiting a b c and d in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, never stop visiting a b c d and h, We must always visit some landmarks in any order. Always is the "G" LTL operator. "never stop visiting" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, frequent a b c d and h infinitely in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "frequent" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, please keep visiting a b c d and h without stopping, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, keep visiting a b c d h in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit b but only after a also you cannot revisit a before completing the remaining tasks, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" and "cannot revisit" specify we only visit one landmark after visiting another and we cannot revisit a landmark until we visit all the remaining landmarks. "We eventually visit b but not until we visit a and we cannot revisit a until we visit all the remaining landmarks". Examining each part, "visit b but not until visit a" is "(!b U a)". "cannot revisit a until we visit all the remaining landmarks" is "(G(!a U (Fb & Fc & Fd & ...))". The answer is "(!b U a) & (G(!a U (Fb & Fc & Fd & ...)))".

(!b U a) & !a & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, go to a only then go to b but ensure to not revisit a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" and "but ensure to not revisit" specify we only visit one landmark after visiting another and we cannot revisit a landmark. "We eventually visit b but not until we visit a and we cannot revisit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "cannot revisit a" is "!a". "eventually visit b" is "Fb". The answer is "(!b U a) & !a & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit a and b in that exact sequence out of sequence visits and repeated visits are not permitted, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that exact sequence" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb & (!a), & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, go to a and only then go to b without returning to a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we cannot return to a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb & (!a)".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, reach a and then b in that exact order without repetitions, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that exact order" and "without repetitions" specify we only visit one landmark after visiting another and we cannot visit the same landmark twice. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, visit a then visit b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, visit a followed by b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "followed by" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a then b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, go to b after visiting a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Ga, G F a, patrolling, 1, keep on visiting a forever, We must visit some landmarks forever. Forever is the "G" LTL operator. "keep on visiting" specifies we must "visit a forever". Examining each part, "visit a forever" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Fa, G F a, patrolling, 1, go to a repeatedly, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Fa, G F a, patrolling, 1, make sure at any point in time you will visit a at least once in the future, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "make sure" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Ga, G F a, patrolling, 1, keep visiting a forever, We must visit some landmarks infinitely often. Infinitely often is the "G" LTL operator. "keep visiting" specifies we must "visit a infinitely often". Examining each part, "visit a infinitely often" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga & Gb, & G F a G F b, patrolling, 2, keep visiting a and b forever, We must visit some landmarks in any order forever. Forever is the "G" LTL operator. "keep visiting" specifies we must "visit a and b forever". Examining each part, "visit a forever" is "Ga". "visit b forever" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

F(a U a) & F(b U b), & G F a G F b, patrolling, 2, go to a and b infinitely often, We must eventually visit some landmarks infinitely often. Eventually is the "F" LTL operator. "infinitely often" specifies we must "eventually visit a and b infinitely often". Examining each part, "eventually visit a infinitely often" is "F(a U a)". "eventually visit b infinitely often" is "F(b U b)". There are 2 landmarks so we are done. The answer is "F(a U a) & F(b U b)".

Fa & Fb, & G F a G F b, patrolling, 2, at any point in time you must visit a and b at least once after, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "at any point in time" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Ga & Gb, & G F a G F b, patrolling, 2, always keep visiting a and b, We must always visit some landmarks in any order. Always is the "G" LTL operator. "keep visiting" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, keep visiting a b and c infinitely often, We must visit some landmarks infinitely often. Infinitely often is the "G" LTL operator. "keep visiting" specifies we must "visit a, b, and c infinitely often". Examining each part, "visit a infinitely often" is "Ga". "visit b infinitely often" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, make sure you are always visiting a b and c, We must always visit some landmarks in any order. Always is the "G" LTL operator. "make sure" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, do not ever stop visiting a b and c, We must always visit some landmarks in any order. Always is the "G" LTL operator. "do not ever stop visiting" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, at any point in time ensure that you will visit a b and c at least once in the future, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "at any point in time" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, repeatedly keep visiting a b and c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "repeatedly keep visiting" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Fa, G F a, patrolling, 1, keep visiting a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Fa, G F a, patrolling, 1, continue to visit a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "continue to visit" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, visit a then b then c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, go to a then b then c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, visit a b c one after the other, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "one after the other" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, visit a followed by b which is then to be followed by c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "followed by" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & G(!a & !b & !c), & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit b but before visiting b you must visit a only after that visit c visit each location once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "before" and "only after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit each location once" is "G(!a & !b & !c)". The answer is "(!b U a) & (!c U b) & G(!a & !b & !c)".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a only once without visiting b then visit b one time without visiting c finally visit c in the future, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "without visiting" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fa & Fb & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a b and c once do not visit b without visiting a and do not visit c without visiting b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "do not visit" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fa & Fb & Fc".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, only visit a once followed by visiting b then visiting c once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only visit" specifies we only visit one landmark once. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa & Fb & Fc, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, don not stop visiting a b and c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "don not stop visiting" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & Xa & Xb & Xc & Xd & Xh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a only once then eventually visit b only once then visit c in the future for one time followed by one visit to d and after that h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "in the future for one time" specify we only visit one landmark once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & Xa & Xb & Xc & Xd & Xh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fa & Fb & Fc & Fd & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a b c d and h once do not visit b without visiting a and do not visit c without visiting b also do not visit d without visiting c and do not visit h without visiting d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "do not visit" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit a, b, c, d, and h" is "Fa & Fb & Fc & Fd & Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fa & Fb & Fc & Fd & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a followed by visiting b then visit c d and h in this exact order visit all locations once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "followed by" and "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, do not stop visiting a b and c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop visiting" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, keep visiting a b c and d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, keep going to a b c and d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going to" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, go to a b c and d over and over again, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "over and over again" specifies we must "eventually visit a, b, c, and d" in any order. Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, continue to stop at a b c and d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "stop at" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa, G F a, patrolling, 1, please keep visiting a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Fa, G F a, patrolling, 1, keep going to a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going to" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Ga, G F a, patrolling, 1, always stop at a repeatedly, We must always visit some landmarks in any order. Always is the "G" LTL operator. "stop" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Fa, G F a, patrolling, 1, keep visiting a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Fa & Fb, & G F a G F b, patrolling, 2, keep going between a and b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, & G F a G F b, patrolling, 2, keep visiting a and b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, & G F a G F b, patrolling, 2, keep visiting b and a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, & G F a G F b, patrolling, 2, keep on visiting a and b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep on visiting" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

e "G" operator specifies that the formula must hold for an infinite number of time, & G F a G F b, patrolling, 2, travel to a and b an infinite number of times, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "travel" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb & G(Fa & Fb)". The "G" operator specifies that the formula must hold for an infinite number of times.

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, visit a b and c infinitely often, We must visit some landmarks infinitely often. Infinitely often is the "G" LTL operator. "visit" specifies we must "visit a, b, and c infinitely often". Examining each part, "visit a infinitely often" is "Ga". "visit b infinitely often" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, keep visiting c a and b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, continuously move to c b and a, We must continuously visit some landmarks in any order. Continuously is the "G" LTL operator. "move to" specifies we must "continuously visit a, b, and c". Examining each part, "continuously visit a" is "Ga". "continuously visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, keep going to h d c b and a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going to" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

F(a U a) & F(b U b) & F(c U c) & F(d U d) & F(h U h), & G F a & G F b & G F c & G F d G F h, patrolling, 5, go to a b c d and h infinitely often, We must eventually visit some landmarks infinitely often. Eventually is the "F" LTL operator. "infinitely often" specifies we must "eventually visit a, b, c, d, and h infinitely often". Examining each part, "eventually visit a infinitely often" is "F(a U a)". "eventually visit b infinitely often" is "F(b U b)". Repeat for the remaining parts. The answer is "F(a U a) & F(b U b) & F(c U c) & F(d U d) & F(h U h)".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, cycle through d h b c and a, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "cycle through" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

(!b U a) & (!c U b) & a & !a & b & !b & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a exactly once do not visit b or c before a then visit b exactly once  do not visit c before b finally visit c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "do not visit" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "exactly once visit a" is "a & !a". "exactly once visit b" is "b & !b". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & a & !a & b & !b & Fc".

(!b U a) & (!c U b) & XFc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, go to a exactly once then go to b exactly once finally go to c do not go to b or c before a do not go to c before b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "do not go" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "exactly once" is "X". The answer is "(!b U a) & (!c U b) & XFc".

G(!b & !c & a) & G(!c & b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a exactly once while avoiding b and c then visit b exactly once while avoiding c finally visit c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "while avoiding" specify we must visit one landmark exactly once and avoid other landmarks. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit a exactly once while avoiding b and c" is "G(!b & !c & a)". "visit b exactly once while avoiding c" is "G(!c & b)". "eventually visit c" is "Fc". The answer is "G(!b & !c & a) & G(!c & b) & Fc".

(!b U a) & (!c U b) & !b & !c & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, go to a exactly once while avoiding b and c then go to b exactly once while avoiding c finally go to c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "while avoiding" specify we only visit one landmark after visiting another and we cannot visit certain landmarks. "We eventually visit c but not until we visit b and we visit b but not until we visit a and we cannot visit b or c". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "avoid b" is "!b". "avoid c" is "!c". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & !b & !c & Fc".

(!b U !c U a) & (!c U !b U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a exactly once avoid b or c before a then reach b exactly once  avoid c before b finally move to c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "avoid" specify we must visit one landmark exactly once and avoid visiting another landmark before visiting the first. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not avoid c before a" is "(!b U !c U a)". "visit c but not avoid b before b" is "(!c U !b U b)". "eventually visit c" is "Fc". The answer is "(!b U !c U a) & (!c U !b U b) & Fc".

(!a U !b) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, go to a only once but keep away from b and then visit b but keep away from a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "keep away from" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we visit a but not until we keep away from b". Examining each part, "visit a but not until keep away from b" is "(!a U !b)". "eventually visit b" is "Fb". The answer is "(!a U !b) & Fb".

(!b U a) & (!a W b) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit a one time but not through b and head to b after a is visited but not through a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" and "but not through" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we visit a but not through b". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a but not through b" is "(!a W b)". "eventually visit b" is "Fb". The answer is "(!b U a) & (!a W b) & Fb".

(!b U Xa) & (!a W b) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, stay away from b until you visit a exactly once and then go to b while staying away from a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "until" and "while" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a exactly once and we stay away from a while visiting b". Examining each part, "visit b but not until visit a exactly once" is "(!b U Xa)". "stay away from a while visiting b" is "(!a W b)". "eventually visit b" is "Fb". The answer is "(!b U Xa) & (!a W b) & Fb".

(!b U !a) & a & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, avoid b initially when a is not visited and then just visit a once and then visit b while avoiding a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "avoid" and "just visit" specify we only visit one landmark after visiting another. "We eventually visit b but not until we avoid a and we just visit a once". Examining each part, "avoid b initially when a is not visited" is "(!b U !a)". "just visit a once" is "a". "eventually visit b" is "Fb". The answer is "(!b U !a) & a & Fb".

(!b U a) & (b & !a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, do not visit b before you visit a and then go to b without revisiting a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "before" and "without" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we visit b without revisiting a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit b without revisiting a" is "(b & !a)". "eventually visit b" is "Fb". The answer is "(!b U a) & (b & !a) & Fb".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, go to a then go to b then go to c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, move to a then move to b then move to c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "move to" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, visit a then visit b then reach c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "reach" specifies we must "eventually visit c". Examining each part, "eventually visit c" is "Fc". There are 3 landmarks so we are done. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, visit a then visit b finally reach c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "reach" specifies we must "eventually visit c". Examining each part, "eventually visit c" is "Fc". There are 3 landmarks so we are done. The answer is "Fa & Fb & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, move to a then move to b finally reach c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "move to" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". There are 3 landmarks so we are done. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & (!d U c) & (!a & !b & !c) & (!a & !b & !d) & (!a & !c & !d) & (!b & !c & !d) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, go to a only once but keep away from b c and d and then go to b only once but keep away from a c and d and then go to c only once but keep way from a b and d and finally go to d once but keep away from a b and c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "keep away from" specify we only visit one landmark after visiting another and we cannot visit certain landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & (!a & !b & !c) & (!a & !b & !d) & (!a & !c & !d) & (!b & !c & !d) & Fd".

(!b U (!a & !c & !d)) & (!c U (!a & !b & !d)) & (!d U (!a & !b & !c)) & Fa & Fb & Fc & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit a one time but not through b c or d and then visit b once but not through a c or d and then visit c once but not through a b or d and then visit d once but not through a b or c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "one time" and "not through" specify we only visit one landmark after visiting another. "We eventually visit d but not through a, b, or c and we visit c but not through a, b, or d and we visit b but not through a, c, or d and we eventually visit a but not through b, c, or d". Examining each part, "visit b but not through a, c, or d" is "(!b U (!a & !c & !d))". "visit c but not through a, b, or d" is "(!c U (!a & !b & !d))". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U (!a & !c & !d)) & (!c U (!a & !b & !d)) & (!d U (!a & !b & !c)) & Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, stay away from b c and d until you make a single visit to a and then make your way to b while staying away from a c and d and then make your way to c while staying away from a b or d and finally make your way to d while staying away from a b and c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "until" and "while" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, head to a b c and d in this order without skipping or revisiting any one of them, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in this order" and "without skipping or revisiting any one of them" specify we only visit one landmark after visiting another and we cannot revisit any landmark. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit each of a b c and d exactly once in this order, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "in this order" specify we only visit one landmark after visiting another and we must visit each landmark exactly once. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d)".

e "G" operator specifies that the formula must hold indefinitel, & G F a & G F b G F c, patrolling, 3, visit a b and c indefinitely, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & G(Fa & Fb & Fc)". The "G" operator specifies that the formula must hold indefinitely.

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, do not stop going to c a and b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop going to" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, continuously visit a b c and d, We must continuously visit some landmarks in any order. Continuously is the "G" LTL operator. "visit" specifies we must "continuously visit a, b, c, and d". Examining each part, "continuously visit a" is "Ga". "continuously visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Fa & Fb & Fc & Fd & G(!Fa & !Fb & !Fc & !Fd), & G F a & G F b & G F c G F d, patrolling, 4, do not go to c a d and b a finite number of times, We must eventually visit some landmarks in any order, but not more than a finite number of times. Eventually is the "F" LTL operator. "do not go" specifies we must "eventually visit a, b, c, and d" but not more than a finite number of times. Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & G(!Fa & !Fb & !Fc & !Fd)".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, perpetually travel to b c d and a, We must perpetually visit some landmarks in any order. Perpetually is the "G" LTL operator. "travel to" specifies we must "perpetually visit a, b, c, and d". Examining each part, "perpetually visit a" is "Ga". "perpetually visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, you are prohibited from not infinitely going to d c a and b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "prohibited from not infinitely" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

mplied by the "F" operato, & G F a & G F b & G F c & G F d G F h, patrolling, 5, go to c a d h and b an infinite number of times, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh". The "infinite number of times" part is implied by the "F" operator.

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, visit a b h d and c with no limits, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, you are prohibited from not going to d c h b and a forever, We must never visit some landmarks in any order. Never is the "G" LTL operator. "prohibited from not going" specifies we must "never visit a, b, c, d, and h". Examining each part, "never visit a" is "Ga". "never visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, you cannot stop traveling to c a h b and d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "you cannot stop" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, you are not allowed to cease exploring a b c d and h, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "not allowed to cease exploring" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, keep visiting a b c and d in no specific order, We must keep visiting some landmarks in any order. Keep is the "G" LTL operator. "visit" specifies we must "keep visiting a, b, c, and d". Examining each part, "keep visiting a" is "Ga". "keep visiting b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, keep going to a b c and d in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going to" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, do not stop visiting a b c and d in no specific order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop visiting" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, do not stop going to a b c and d in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop going to" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, keep visiting a b c d and h in no specific order, We must keep visiting some landmarks in any order. Keep is the "G" LTL operator. "visit" specifies we must "keep visiting a, b, c, d, and h". Examining each part, "keep visiting a" is "Ga". "keep visiting b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, keep going to a b c d and h in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going to" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, keep visiting a b c d and h in any order infinitely, We must eventually visit some landmarks in any order infinitely. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, do not stop visiting a b c d and h in no specific order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop visiting" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, do not stop going to a b c d and h in no specific order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop going to" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go to a only then go to b only then go to c only then go to d and only then go to h make sure to  not revisit any of the locations before completing the task, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". "not revisit any of the locations before completing the task" is "G(!a & !b & !c & !d & !h)". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go to a only then go to  b without returning only after that go to c without returning only after that go to d without returning  and finally only then go to h without returning, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" and "without returning" specify we only visit one landmark after visiting another and we cannot return to a landmark. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go to h but only after going to d only once go to d only after going to c only once go to c only after going to b only once and go to b only after going to a only once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" and "only once" specify we only visit one landmark after visiting another and we can only visit it once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a and only then visit b without returning to a only then visit c without returning to b only then visit d without returning to c and only then visit h without returning to d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a b c d and h in that exact order once you leave any location you cannot return to it, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first and we cannot return to any location once we leave it. Eventually is the "F" LTL operator. "in that exact order" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

Ga & Gb, & G F a G F b, patrolling, 2, never stop visiting a and b, We must always visit some landmarks in any order. Always is the "G" LTL operator. "never stop visiting" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Fa & Fb, & G F a G F b, patrolling, 2, frequent a and b infinitely in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "frequent" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

e "G" operator specifies that the formula must hold for all future tim, & G F a G F b, patrolling, 2, visit a and b an infinite number of times, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb & G(Fa & Fb)". The "G" operator specifies that the formula must hold for all future time.

Fa & Fb, & G F a G F b, patrolling, 2, keep going to a and b in arbitrary order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, & G F a G F b, patrolling, 2, please keep visiting a and b without stopping, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Ga, G F a, patrolling, 1, never stop visiting a, We must always visit some landmarks in any order. Always is the "G" LTL operator. "never stop visiting" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

F∞a, G F a, patrolling, 1, frequent a infinitely, We must eventually visit some landmarks infinitely often. Eventually is the "F" LTL operator. "frequent" specifies we must "eventually visit a infinitely often". Examining each part, "eventually visit a infinitely often" is "F∞a". There is 1 landmark so we are done. The answer is "F∞a".

Fa, G F a, patrolling, 1, please keep visiting a without stopping, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Fa & Fb, & G F a G F b, patrolling, 2, keep visiting a and b in any order, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep visiting" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, & G F a G F b, patrolling, 2, frequent a and b but the order can be arbitrary, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "frequent" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Fa & Fb, & G F a G F b, patrolling, 2, keep going back and forth between a and b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going back and forth" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, go to a then go to b then go to c then go to d finally go to h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a then visit b then visit c then visit d finally visit h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, move to a then move to b then move to c then move to d finally move to h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, first go to a then move to b then go visit c then visit d finally reach h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, first make your way to a then you must go to b after that visit c then move to d finally reach h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first", "after that", and "finally" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & G(!a) & G(!c) & G(!h) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, before visiting b c d and h visit a and never visit it again then visit b before c d and h and never visit it again do not visit d and h until you visit c never visit c again then visit d before h and never visit h again finally visit h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "before" and "never visit it again" specify we only visit one landmark after visiting another and we cannot visit it again. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & G(!a) & G(!c) & G(!h) & Fh".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit b but before visiting b you must visit a visit each location once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "before" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit a and visit only once then eventually visit b do not visit b before visiting a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "do not visit b before visiting a" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Xa & (!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, only visit a once then visit b only after visiting a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a once" is "Xa". "eventually visit b" is "Fb". The answer is "Xa & (!b U a) & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit a only once then visit b but do not visit b before visiting a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "but do not visit b before visiting a" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, go to a then go to b then go to c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, go to a then visit b then reach c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" and "visit" specify we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, go to c after b go to b after going to a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(b R a) & (c R b), F & a F & b F c, sequenced_visit, 3, visit b at least once after going to a and visit c at least once after going to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "at least once after" specify we must visit one landmark at least once after visiting another. "We eventually visit c at least once after visiting b and we visit b at least once after visiting a". Examining each part, "visit b at least once after visit a" is "(b R a)". "visit c at least once after visit b" is "(c R b)". The answer is "(b R a) & (c R b)".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, reach a then reach b and then reach c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "reach" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, go to a then go to b then go to c and then go to d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c), F & a F & b F & c F d, sequenced_visit, 4, ensure that you visit a b c and d in order, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. The answer is "(!b U a) & (!c U b) & (!d U c)".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, visit b at least once after visiting a visit c at least once after visiting a and b visit d at least once after visiting a b and c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "at least once after" specify we must visit one landmark at least once after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

Fa & Fb & Fc & Fd, F & a F & b F & c F d, sequenced_visit, 4, reach a then reach b then reach c and then reach d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "reach" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, visit a b c and d one after the other, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "one after the other" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

e "G" operator specifies that the formula must hold for all future tim, & G F a G F b, patrolling, 2, continue visiting  a and b an infinite number of times, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "continue visiting" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb & G(Fa & Fb)". The "G" operator specifies that the formula must hold for all future time.

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a followed by b then c then d and then h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "followed by" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a followed by b then b followed by c then c followed by d then d followed by h and then h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "followed by" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a then b then c then d and then h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, visit a followed by b then b followed by c then c followed by d and then d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "followed by" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, visit a then b then c and then d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

Fa & Fb & Fc & Fd, F & a F & b F & c F d, sequenced_visit, 4, go to a then b then c and then d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, move to a then b then c and then d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, visit a b c and d one after another, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "one after another" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & G(!a & !b & !c & !d) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit b but before visiting b you must visit a only after that visit c after visiting c visit d visit each location once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "before" and "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit each location once" is "G(!a & !b & !c & !d)". "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & G(!a & !b & !c & !d) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit a only once while avoiding b then visit b once while avoiding c only after visiting c once visit d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "only after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fa & Fb & Fc & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit a b c d once do not visit b without visiting a and do not visit b without visiting c do not visit d without visiting c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "do not visit" specifies we only visit one landmark after visiting another. "We do not visit b without visiting a and we do not visit b without visiting c and we do not visit d without visiting c". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit a, b, c, and d" is "Fa & Fb & Fc & Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit a then b then c then d follow this strict order and visit each location only once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "follow this strict order" and "visit each location only once" specify we only visit one landmark after visiting another and we cannot visit a landmark twice. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d)".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, do not stop visiting a b c and d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop visiting" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, keep going to a b c d and h an infinite number of times, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "keep going" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, do not stop visiting a b c d and h, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "do not stop visiting" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, please go to a then b then c then d in that specific order without revisiting previously visited location, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that specific order" and "without revisiting previously visited location" specify we only visit one landmark after visiting another and we cannot revisit any previously visited landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, first go to a once without visiting b then go to b once without visiting c then go to c once without visiting d finally go to d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "once without visiting" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U !c) & (!c U !d) & (!d U c) & Fa & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, first go to a once then go to b once while avoiding c then go to c once while avoiding d finally go to d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first", "once", "while avoiding", and "finally" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we avoid d and we visit b but not until we avoid c and we eventually visit a". Examining each part, "visit b but not until avoid c" is "(!b U !c)". "visit c but not until avoid d" is "(!c U !d)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U !c) & (!c U !d) & (!d U c) & Fa & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, go to a without visiting b then go to b without visiting c then go to c without visiting d finally go to d while only visiting each location once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without visiting" and "only visiting each location once" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, visit a then b then c and then d in that strict order without returning to previously visited locations, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that strict order" and "without returning to previously visited locations" specify we only visit one landmark after visiting another and we cannot revisit any landmarks. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & !a & !b & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, reach a first only then reach b and do not visit a again only then reach c and do not visit b again, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" and "do not visit again" specify we only visit one landmark after visiting another and we cannot visit a landmark twice. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "do not visit a again" is "!a". "do not visit b again" is "!b". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & !a & !b & Fc".

(!b U a) & (!c U b) & !c & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, first go to a once then go to b once while avoiding c finally go to c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "once" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a and we must avoid c". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "avoid c" is "!c". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & !c & Fc".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, visit a once while staying away from b then visit b once while staying away from c finally visit c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while staying away from" specifies we must visit one landmark before visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & G(!a & !b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, go to a only then go to b only then go to c while visiting a and b only once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit a and b only once" is "G(!a & !b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & G(!a & !b) & Fc".

(!b U a) & (!c U b) & !a & !b & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, go to a first go to b second and do not visit a again go to c third and do not visit b again, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "second" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "do not visit a again" is "!a". "do not visit b again" is "!b". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & !a & !b & Fc".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a and then to b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, make sure to go to b after you visit a, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & Fb, F & a F b, sequenced_visit, 2, go to a finally go to b, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "finally" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, travel first to a and then make your way to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, visit a then visit b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, go to a then go to b then go to c then go to d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, travel from a to b to c to d and make sure to go to b after a c after b and d after c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

Fa & Fb & Fc & Fd, F & a F & b F & c F d, sequenced_visit, 4, travel to a then travel to b then go to c then reach d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "travel to" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Fa & Fb & Fc & Fd, F & a F & b F & c F d, sequenced_visit, 4, travel from a to b to c to d, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "travel from" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, first go to a then visit b then move to c finally reach d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "then" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit b after you visit a visit c after you visit b visit d after you visit c visit h after you visit d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, go to a then go to b then go to c then go to d then go to h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a then b then c then d and finally h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, visit a visit b after a then visit c after b then visit d after c finally visit h after d, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, make your way to a visit b afterwards then go to c after that and d after that finally go to h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "afterwards" and "after that" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit a first then visit b while only visiting each location once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "while" specify we only visit one landmark after visiting another and that we cannot visit a landmark more than once. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U (a & !b)) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, first go to a once without visiting b then go to b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "once" specify we must visit one landmark before visiting another. "We eventually visit b but not until we visit a without visiting b". Examining each part, "visit b but not until visit a without visiting b" is "(!b U (a & !b))". "eventually visit b" is "Fb". The answer is "(!b U (a & !b)) & Fb".

(!b U a) & !a, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, go to a without visiting b then go to b without going to a again, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without" specifies we cannot visit one landmark after visiting another. "We eventually visit b but not until we visit a and we cannot visit a again". Examining each part, "visit b but not until visit a" is "(!b U a)". "cannot visit a again" is "!a". The answer is "(!b U a) & !a".

(!b U a) & !a & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, visit a and only then reach b you can only visit a once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we can only visit a once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a once" is "!a". "eventually visit b" is "Fb". The answer is "(!b U a) & !a & Fb".

(!b U Xa) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, you must go to a while avoiding b and then go to b only go to a one time before visiting b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while avoiding" and "only go to a one time before visiting b" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a one time". Examining each part, "visit b but not until visit a one time" is "(!b U Xa)". "eventually visit b" is "Fb". The answer is "(!b U Xa) & Fb".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go from a to b to c to d to h in that specific order and only visit each landmark one time, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that specific order" and "only visit each landmark one time" specify we only visit one landmark after visiting another and we cannot visit a landmark more than once. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(a & b & c & d & h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, first visit a while avoiding b then visit b while avoiding c then visit c while avoiding d then visit d while avoiding h finally visit h visit each location once, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while avoiding" specifies we must visit one landmark before visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(a & b & c & d & h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go to a once without visiting b then go to b once without visiting c then go to c once without visiting d then go to d once without visiting h finally go to h, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "once without visiting" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, visit a while staying away from b then visit b while staying away from c then visit c while staying away from d then visit d while staying away from h finally reach h without returning to any previously visited locations, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while staying away from" specifies we must not visit a landmark until we visit another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, go to a without visiting b then go to b without visiting c third go to c without visiting d fourth go to d without visiting h finally go to h visit a b c and d only one time, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without visiting" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, go to a then go to b then go to c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, go to a b c make sure to go to b after a and c after b, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fa & Fb & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, reach a then reach b then reach c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "reach" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, visit a then go to b finally make your way to c, We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, go to a then head to b finally go to c, We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "go to" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". There are 3 landmarks so we are done. The answer is "Fa & Fb & Fc".

Accuracy: 0.1178343949044586