Parsed_output, Ground_truth, LTL_type, Num_props, Instruction, Model_output

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Eventually, visit a first and then visit b after., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a, then visit b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, go to landmark a. Then, at some point afterward, visit landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then landmark b, then landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then landmark b, and finally landmark c in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(a -> b) & (b -> c) & (c -> d) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmarks a, b, c, and d in sequence, with each landmark being immediately followed by the next one., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(a -> b)". "visit c but not until visit b" is "(b -> c)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(a -> b) & (b -> c) & (c -> d) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit a, then visit b, then visit c, then visit d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmarks a, b, c, d, and h in that order, with the possibility of other landmarks in between., We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "in that order" specifies we must visit the landmarks in a certain order. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark a only once and do not visit landmark b until after you have visited landmark a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "until after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, visit landmark A only once. Then, visit landmark B only once. After visiting B, you may eventually visit C, but not until after you have visited B., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only once" and "not until" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmarks in the following order: a, then b, then c, then d. Only visit each landmark once. Do not visit d until you have visited c, do not visit c until you have visited b, and do not visit b until you have visited a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit a, then b, then c, and finally d. You can only visit each landmark once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit a, then visit b, then visit c, then visit d, and finally visit h. Only visit each landmark once and do not visit h until you have visited d. Do not visit d until you have visited c, and do not visit c until you have visited b, and do not visit b until you have visited a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks a, b, c, d, and h in that order without revisiting any landmark., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

Fa & Fb & Fc & Fd & h & (!a U !b) & (!b U !c) & (!c U !d) & (!d U !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Eventually visit a, then eventually visit b, then eventually visit c, then eventually visit d, then visit h. Visit each landmark only once., We eventually visit some landmarks in any order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "Visit each landmark only once" specifies we must visit each landmark once and only once. Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. "visit h" is "h". The answer is "Fa & Fb & Fc & Fd & h & (!a U !b) & (!b U !c) & (!c U !d) & (!d U !h)".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Move to a and then move to b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit landmark a, then visit landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, locate landmark "a". Then, locate landmark "b"., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Move to landmark a, then locate landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually locate b but not until we move to a". Examining each part, "locate b but not until move to a" is "(!b U a)". "eventually locate b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, visit landmark a. Then, move to landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark a exactly once and then visit landmark b while avoiding landmark b until after visiting landmark a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "while avoiding" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & G(!b) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Eventually reach a while always staying away from b, then eventually move to b., We eventually visit some landmarks in any order while avoiding some landmarks. Eventually is the "F" LTL operator. "Eventually reach a" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". "always staying away from b" is "G(!b)". "eventually move to b" is "Fb". The answer is "Fa & G(!b) & Fb".

(!b U a) & Xa & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Move to landmark a. Ensure that you only visit a once and do not visit landmark b during this movement. Once you have reached a, locate landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only" and "do not" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we visit a only once". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a only once" is "Xa". The answer is "(!b U a) & Xa & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Navigate to a once without passing through b. After reaching a, you may then go to b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without passing through" specifies we cannot visit one landmark until we visit another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Fa & !Fb & (b U a), & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark a exactly once. Avoid landmark b. After visiting a, navigate to landmark b., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". "Avoid" specifies we must "never visit b". "After visiting a, navigate to landmark b" specifies we must "visit b after visiting a". Examining each part, "eventually visit a" is "Fa". "never visit b" is "!Fb". "visit b after visiting a" is "(b U a)". The answer is "Fa & !Fb & (b U a)".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Fa, G F a, patrolling, 1, Keep moving towards landmark "a"., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Keep moving towards" specifies we must "eventually visit a". Examining each part, "eventually visit a" is "Fa". There is 1 landmark so we are done. The answer is "Fa".

Ga, G F a, patrolling, 1, Always visit a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always continue visiting landmark "a"., We must always visit some landmarks in any order. Always is the "G" LTL operator. "continue visiting" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, You must always visit a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

(!b U a) & (!c U b) & Xa & Xb & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmark a exactly once, then visit landmark b exactly once, and finally visit landmark c. Avoid visiting landmarks b and c before visiting landmark a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "avoid" specify we only visit one landmark after visiting another and we cannot visit some landmarks until we visit others first. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "exactly once" is "X". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Xa & Xb & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit a. Then, visit b. Finally, visit c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then b, then c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then visit b after a has been visited, and finally visit c after both a and b have been visited., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then visit landmark b, and finally visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then visit landmark b, and finally visit landmark c in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always go to a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "go to" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit landmark A., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Gp, G F a, patrolling, 1, Visit the landmark infinitely many times., We must visit some landmarks infinitely many times. The "G" LTL operator is used to specify that something must hold globally, or for all time. "Visit" specifies we must "visit the landmark infinitely many times". Examining each part, "visit the landmark infinitely many times" is "Gp". There is 1 landmark so we are done. The answer is "Gp".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a, then visit b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a, then go to b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit b after visiting a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a, then visit b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, go to landmark a. Then, go to landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a, then visit b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Go to b after visiting a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit landmark a, then visit landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, reach landmark "a". Then, go to landmark "b"., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, visit landmark "a". Then, proceed to landmark "b"., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmarks a, b, c, d, and h in sequence., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit a, then visit b, then visit c, then visit d, and finally visit h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmarks a, b, c, d, and h in sequence., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U (a & b)) & (!d U (a & b & c)) & (!h U (a & b & c & d)) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit b, then visit c after visiting both a and b, then visit d after visiting a, b, and c, and finally visit h after visiting a, b, c, and d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit both a and b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit both a and b" is "(!c U (a & b))". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U (a & b)) & (!d U (a & b & c)) & (!h U (a & b & c & d)) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, First, visit landmark a. Then, proceed to landmark b. After that, make your way to landmark c. Once you have reached landmark c, continue on to landmark d. Finally, head to landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", "After that", "Once you have reached", and "Finally" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit a, then b, then c, then d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmarks a, b, c, and d in that order, with the possibility of visiting other locations in between., We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "in that order" specifies we visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit a, then visit b after visiting a, then visit c after visiting b, then visit d after visiting c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmark a, then visit landmark b, then visit landmark c, and finally visit landmark d. Other locations may be visited in between., We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Walk to a, then walk to b, then walk to c, and finally walk to d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit a, then b, then c, then d, and finally h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmarks a, b, c, d, and h in that order, with the possibility of visiting other locations in between., We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "in that order" specifies we visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmark a, then visit landmark b after visiting a. After visiting b, visit landmark c. After visiting c, visit landmark d. Finally, visit landmark h after visiting d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmark a, then visit landmark b, then visit landmark c, then visit landmark d, and finally visit landmark h. Other locations may be visited in between., We eventually visit some landmarks in a certain order while we can visit other landmarks in between. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Walk to a, then walk to b, then walk to c, then walk to d, and finally walk to h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then landmark b, then landmark c, then landmark d, and finally landmark h. Do not pass through landmarks b, c, d, or h when traveling to the next landmark. Once a landmark has been visited, do not revisit it., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "do not pass through" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks in the following order: a, b, c, d, and h. Do not revisit any landmark. Only visit h after visiting d, visit d after visiting c, visit c after visiting b, and visit b after visiting a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in the following order" and "after visiting" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then visit landmark b, then visit landmark c, then visit landmark d, and finally visit landmark h. Do not revisit any previously visited landmarks while traveling to the next one., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U b) & (!a U c) & (!b U c) & (!a U d) & (!b U d) & (!c U d) & (!a U h) & (!b U h) & (!c U h) & (!d U h) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, First, go to landmark a without visiting landmarks b, c, d, or h. Then, go to landmark b without visiting landmarks c, d, or h, or revisiting landmark a. Alternatively, revisit landmark a before going to landmark c without visiting landmarks d or h, or revisiting landmarks a or b. After that, go to landmark d without visiting landmark h or revisiting landmarks a, b, or c. Finally, go to landmark h without revisiting landmarks a, b, c, or d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without visiting" and "without revisiting" specify we cannot visit certain landmarks until we visit others first. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & (!a U b) & (!a U c) & (!b U c) & (!a U d) & (!b U d) & (!c U d) & (!a U h) & (!b U h) & (!c U h) & (!d U h) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks a, b, c, d, and h in sequence without skipping any of them. Do not revisit any landmark after you have already visited it., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" and "without skipping any of them" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

(!B U A) & (!C U B) & (!D U C) & FD, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, First, visit landmark A without passing through landmarks B, C, or D. Then, visit landmark B without passing through landmarks C or D. Next, visit landmark C without passing through landmark D. Finally, visit landmark D without revisiting any previous landmarks., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without passing through" and "without revisiting" specify we only visit one landmark after visiting another. "We eventually visit D but not until we visit C and we visit C but not until we visit B and we eventually visit B but not until we visit A". Examining each part, "visit B but not until visit A" is "(!B U A)". "visit C but not until visit B" is "(!C U B)". Repeat for the remaining parts. "eventually visit D" is "FD". The answer is "(!B U A) & (!C U B) & (!D U C) & FD".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmarks in the following order: a, b, c, and d. Do not revisit any landmark., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in the following order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmark a, then visit landmark b, then visit landmark c, and finally visit landmark d. Do not revisit any previously visited landmarks while traveling to the next one., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!a U b) & (!a U c) & (!a U d) & (!b U c) & (!b U d) & (!c U d) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, First, go to landmark a without visiting landmarks b, c, or d. Then, go to landmark b without visiting landmarks c or d, or revisiting landmark a. After that, go to landmark c without visiting landmark d or revisiting landmarks a or b. Finally, go to landmark d without revisiting landmarks a, b, or c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without visiting" and "without revisiting" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & (!a U b) & (!a U c) & (!a U d) & (!b U c) & (!b U d) & (!c U d) & Fd".

(!b U a) & (!c U b) & (!d U c) & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmarks a, b, c, and d in that order without skipping any of them. Do not revisit any landmark once you have been there., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" and "without skipping any of them" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "do not revisit any landmark once you have been there" is "G(!a & !b & !c & !d)". The answer is "(!b U a) & (!c U b) & (!d U c) & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & (!b & !c U a) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, visit a without passing through b or c. Then, visit b without passing through c. Finally, visit c without revisiting any of the previous landmarks., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without passing through" and "without revisiting" specify we cannot visit certain landmarks until we visit others first. "We eventually visit c but not until we visit b and we visit b but not until we visit a and we cannot visit b or c until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "cannot visit b or c until visit a" is "(!b & !c U a)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & (!b & !c U a) & Fc".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmarks in the following order: a, then b, then c. Do not revisit any landmark., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in the following order" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit a, then visit b, then visit c. Do not revisit any previous locations while traveling to the next one., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & (!a & !c) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, go to landmark a. Then, go to landmark b without visiting landmarks c or a again. After that, go to landmark c without revisiting landmarks a or b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a and we cannot visit a or c again". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "cannot visit a or c again" is "(!a & !c)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & (!a & !c) & Fc".

(!b U a) & (!c U b) & (!a & !b & !c) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmarks a, b, and c in that order without skipping any of them. Do not revisit any of them once you have been there., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" and "without skipping any of them" specify we only visit one landmark after visiting another. "Do not revisit any of them once you have been there" specifies we cannot revisit any of the landmarks. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "do not revisit any of them once you have been there" is "(!a & !b & !c)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & (!a & !b & !c) & Fc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Infinitely visit landmarks a, b, and c in any order., We must infinitely visit some landmarks in any order. Infinitely is the "G" LTL operator. "visit" specifies we must "infinitely visit a, b, and c". Examining each part, "infinitely visit a" is "Ga". "infinitely visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c in a continuous loop without any breaks., We must always visit some landmarks in a certain order without any breaks. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit landmarks a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d in any order repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit landmarks a, b, c, and d without any breaks., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit landmarks a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d in any order., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit a, b, c, d, and h., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit a, b, c, d, and h in any order infinitely many times., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h without interruption., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h in any order., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

(!A U Tasks) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, First, complete all remaining tasks. Then, visit landmark A. After visiting landmark A, you may visit landmark B. You may not revisit landmark A until all tasks are completed., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "After" specify we only visit one landmark after visiting another. "We eventually visit B but not until we visit A and we visit A but not until all tasks are completed". Examining each part, "visit A but not until all tasks are completed" is "(!A U Tasks)". "eventually visit B" is "Fb". The answer is "(!A U Tasks) & Fb".

(!b U a) & !a & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, First, visit landmark "a". Then, visit landmark "b". Make sure not to return to landmark "a"., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we cannot return to a". Examining each part, "visit b but not until visit a" is "(!b U a)". "not return to a" is "!a". "eventually visit b" is "Fb". The answer is "(!b U a) & !a & Fb".

(!b U a) & (!b W !a) & (!b R !a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark a, then visit landmark b. Do not visit any other landmarks in between or repeat any visits., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we cannot visit any other landmarks in between or repeat any visits". Examining each part, "visit b but not until visit a" is "(!b U a)". "no other landmarks in between" is "(!b W !a)". "no repeat visits" is "(!b R !a)". "eventually visit b" is "Fb". The answer is "(!b U a) & (!b W !a) & (!b R !a) & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, First, visit landmark a. Then, visit landmark b without revisiting landmark a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, First, reach landmark a. Then, once you have reached a, proceed to landmark b without visiting any other landmarks in between., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we cannot visit any other landmarks in between". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a and then visit b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit landmark a, then visit landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit landmark a, then visit landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a, then go to b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit a in the future., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit landmarks a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Fa & Fb, & G F a G F b, patrolling, 2, After a certain point in time, you must eventually visit landmarks A and B at least once each., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "must eventually visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit a, b, and c repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Fa & Fb & Fc, & G F a & G F b G F c, patrolling, 3, Eventually, visit a, b, and c at least once., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit a, b, and c repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then landmark b, then landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then landmark b, then landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then visit landmark b, and finally visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit landmark a, then landmark b, and finally landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fa & Fb & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, visit landmark A. Then, visit landmark B. After visiting B, visit landmark C. Make sure to visit each landmark only once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "After visiting B, visit landmark C" specifies we visit C but not until we visit B. Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fa & Fb & Fc".

(!b U a) & (!c U b) & a & !a & b & !b & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmark a exactly once and do not visit landmark b before visiting a. Then, visit landmark b exactly once without visiting landmark c before visiting b. Finally, visit landmark c at some point in the future., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "do not visit" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "exactly once visit a" is "a & !a". "exactly once visit b" is "b & !b". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & a & !a & b & !b & Fc".

(!b U a) & (!c U b) & Fa & Fb & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit a, b, and c once. Do not visit b without first visiting a, and do not visit c without first visiting b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without first visiting" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fa & Fb & Fc".

(!b U a) & (!c U b) & a & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmark a once, then visit landmark b, and finally visit landmark c once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "once" specifies we must visit a landmark only once. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit a once" is "a". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & a & Fc".

Ga & Gb & Gc, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & a & b & c & d & h, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, First, visit landmark a exactly once. Then, at some point in time, visit landmark b exactly once. After that, visit landmark c exactly once in the future. Finally, visit landmark d exactly once, followed by a visit to landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit a exactly once" is "a". "visit b exactly once" is "b". Repeat for the remaining parts. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & a & b & c & d & h".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & X(Fa & Fb & Fc & Fd & Fh), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks a, b, c, d, and h exactly once. Do not visit b unless you have already visited a. Do not visit c unless you have already visited b. Do not visit d unless you have already visited c. Do not visit h unless you have already visited d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "unless" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & X(Fa & Fb & Fc & Fd & Fh)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(a & b & c & d & h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then visit landmark b, then visit landmark c, then visit landmark d, and finally visit landmark h. Make sure to visit each landmark exactly once and follow this exact order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exact order" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(a & b & c & d & h)".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit locations a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, then b, then c, and then d repeatedly., We must always visit some landmarks in a certain order. Always is the "G" LTL operator. "Always visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always stop at landmarks a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "stop" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always go to a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "go to" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always stop at landmark a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "stop" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit landmark a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always patrol landmark a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "patrol" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Fa & Fb, & G F a G F b, patrolling, 2, Keep moving back and forth between landmarks a and b., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Keep moving back and forth" specifies we must "eventually visit a and b in any order". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit b and a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Gc & Ga & Gb, & G F a & G F b G F c, patrolling, 3, Always visit landmarks c, a, and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit c, a, and b". Examining each part, "always visit c" is "Gc". "always visit a" is "Ga". "always visit b" is "Gb". There are 3 landmarks so we are done. The answer is "Gc & Ga & Gb".

a & Fc & Fb & G(a & Fc & Fb), & G F a & G F b G F c, patrolling, 3, Always visit a, then eventually visit c, then eventually visit b, and repeat this pattern infinitely., We must eventually visit some landmarks in a certain order and repeat this pattern infinitely. Eventually is the "F" LTL operator. "Always" specifies we must visit a first and then repeat the pattern infinitely. Examining each part, "visit a" is "a". "eventually visit c" is "Fc". "eventually visit b" is "Fb". The answer is "a & Fc & Fb & G(a & Fc & Fb)".

Gc & Gb & Ga, & G F a & G F b G F c, patrolling, 3, Always move to c, then b, then a., We must always visit some landmarks in a certain order. Always is the "G" LTL operator. "Always move" specifies we must "always visit c, then b, then a". Examining each part, "always visit c" is "Gc". "always visit b" is "Gb". "always visit a" is "Ga". There are 3 landmarks so we are done. The answer is "Gc & Gb & Ga".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

(!b U a) & (!c U b) & (!d U c) & (!a U d) & Fa, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Visit landmarks h, d, c, b, and a in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit a but not until we visit b and we visit b but not until we visit c and we visit c but not until we visit d and we visit d but not until we visit h". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit a" is "Fa". The answer is "(!b U a) & (!c U b) & (!d U c) & (!a U d) & Fa".

Fb & Fc & Fa & Fd & Fh & G(b -> c -> a -> d -> h), & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit b, then c, then a, then d, and finally h. Repeat this sequence infinitely., We must eventually visit some landmarks in a certain order and repeat this sequence infinitely. Eventually is the "F" LTL operator. "Always" specifies we must visit the landmarks in a certain order. "visit b, then c, then a, then d, and finally h" is "b -> c -> a -> d -> h". Examining each part, "visit b" is "Fb". "visit c" is "Fc". Repeat for the remaining parts. The answer is "Fb & Fc & Fa & Fd & Fh & G(b -> c -> a -> d -> h)".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

(!h U d) & (!b U h) & (!c U b) & (!a U c) & Fa, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Visit d, then h, then b, then c, and finally a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit a but not until we visit c and we visit c but not until we visit b and we visit b but not until we visit h and we eventually visit h but not until we visit d". Examining each part, "visit h but not until visit d" is "(!h U d)". "visit b but not until visit h" is "(!b U h)". Repeat for the remaining parts. "eventually visit a" is "Fa". The answer is "(!h U d) & (!b U h) & (!c U b) & (!a U c) & Fa".

(!b U a) & (!c U b) & a & b & c, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmark a exactly once. Do not visit landmarks b or c before visiting a. Then, visit landmark b exactly once. Do not visit landmark c before visiting b. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "Do not visit" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit a exactly once" is "a". "visit b exactly once" is "b". "visit c" is "c". The answer is "(!b U a) & (!c U b) & a & b & c".

(!b U a) & (!c U b) & a & b & c, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit a exactly once, then visit b exactly once, and finally visit c. Do not visit b or c before visiting a, and do not visit c before visiting b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "do not visit" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "exactly once visit a" is "a". "exactly once visit b" is "b". "exactly once visit c" is "c". The answer is "(!b U a) & (!c U b) & a & b & c".

(!b U a) & (!c U b) & (!b & !c) W a & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmark a exactly once, then visit landmark b exactly once, and finally visit landmark c. Avoid landmarks b and c while visiting landmark a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "avoid" specify we must visit one landmark exactly once and avoid visiting other landmarks while visiting the first. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "avoid b and c while visiting a" is "(!b & !c) W a". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & (!b & !c) W a & Fc".

G(a & !b & !c) & G(b & !c) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit a exactly once while never visiting b or c, then visit b exactly once while never visiting c, and finally visit c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "never visiting" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit a exactly once" is "G(a & !b & !c)". "visit b exactly once while never visiting c" is "G(b & !c)". "eventually visit c" is "Fc". The answer is "G(a & !b & !c) & G(b & !c) & Fc".

(!b U a) & (!c U b) & G(a & !a) & G(b & !b) & G(c & !c), & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmark a exactly once. Avoid landmarks b or c before visiting a. Then, reach landmark b exactly once. Avoid landmark c before reaching b. Finally, move to landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "avoid" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "exactly once visit a" is "G(a & !a)". "exactly once visit b" is "G(b & !b)". "exactly once visit c" is "G(c & !c)". The answer is "(!b U a) & (!c U b) & G(a & !a) & G(b & !b) & G(c & !c)".

(!B U a) & !a, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark A once and then visit landmark B while avoiding landmark A., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "once" and "while avoiding" specify we must visit one landmark before visiting another and we must not visit the first landmark again. "We eventually visit B but not until we visit A and we must not visit A again". Examining each part, "visit B but not until visit A" is "(!B U a)". "must not visit A again" is "!a". The answer is "(!B U a) & !a".

G(!a) & (!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark A once and then go to landmark B without passing through A again., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "once" and "without passing through" specify we only visit one landmark after visiting another. "We eventually visit B but not until we visit A and we visit A only once". Examining each part, "visit A only once" is "G(!a)". "visit B but not until visit A" is "(!b U a)". "eventually visit B" is "Fb". The answer is "G(!a) & (!b U a) & Fb".

(!b U a) & (!a U b) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Do not approach b until you have visited a exactly once. After visiting a, go to b while avoiding a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "until" and "after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a exactly once and we avoid a after visiting b". Examining each part, "visit b but not until visit a exactly once" is "(!b U a)". "avoid a after visiting b" is "(!a U b)". "eventually visit b" is "Fb". The answer is "(!b U a) & (!a U b) & Fb".

Ga & (!b U a), & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Initially, do not visit b if a has not been visited yet. Then, visit a once and after that, visit b while avoiding a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Initially is the "G" LTL operator. "do not visit b if a has not been visited yet" specifies we cannot visit b until we visit a. "Then, visit a once and after that, visit b while avoiding a" specifies we visit a once and then visit b but not until we visit a. Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a once" is "Ga". The answer is "Ga & (!b U a)".

(!b U a) & (!a R !b) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, First, visit landmark a. Then, you may visit landmark b only if you have not revisited landmark a in between., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "only if" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we cannot visit a again in between". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a again in between" is "(!a R !b)". "eventually visit b" is "Fb". The answer is "(!b U a) & (!a R !b) & Fb".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, visit landmark b. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Move to a, then move to b, then move to c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then visit b, then reach c., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually reach c" is "Fc". There are 3 landmarks so we are done. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, visit landmark b. Finally, reach landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Fa & Fb & Fc, F & a F & b F c, sequenced_visit, 3, Move to a, then move to b, and finally reach c., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "move to" specifies we must "eventually visit a, b, and c". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". "eventually visit c" is "Fc". There are 3 landmarks so we are done. The answer is "Fa & Fb & Fc".

(!b U a) & (!c U b) & (!d U c) & (!a U d) & (!b U d) & (!c U d) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmark A exactly once, then visit landmark B exactly once, then visit landmark C exactly once, and finally visit landmark D exactly once. Always stay away from landmarks A, B, and C when visiting landmark D., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" specifies we must visit each landmark once and only once. "Always stay away from landmarks A, B, and C when visiting landmark D" specifies we must not visit any of the landmarks until we visit D. Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & (!a U d) & (!b U d) & (!c U d) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fa & Fb & Fc & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit a landmark once without passing through landmarks b, c, or d. Then, visit landmark b once without passing through landmarks a, c, or d. Next, visit landmark c once without passing through landmarks a, b, or d. Finally, visit landmark d once without passing through landmarks a, b, or c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without passing through" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. The answer is "(!b U a) & (!c U b) & (!d U c) & Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, First, do not approach landmarks b, c, and d. Then, visit landmark a. After visiting a, go directly to b while avoiding landmarks a, c, and d. Next, go directly to c while avoiding landmarks a, b, and d. Finally, go directly to d while avoiding landmarks a, b, and c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Next" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmark a, then landmark b, then landmark c, and finally landmark d in that order without skipping or revisiting any of them., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmarks a, b, c, and d in that order, each exactly once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit landmarks a, b, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always visit c, a, and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Gb & Gc & Ga, & G F a & G F b G F c, patrolling, 3, Always visit b, then c, and then a repeatedly., We must always visit some landmarks in a certain order. Always is the "G" LTL operator. "Always visit" specifies we must "always visit b, then c, and then a". Examining each part, "always visit b" is "Gb". "always visit c" is "Gc". "always visit a" is "Ga". There are 3 landmarks so we are done. The answer is "Gb & Gc & Ga".

Ga & Gb & Gc, & G F a & G F b G F c, patrolling, 3, Always explore landmarks b, a, and c., We must always visit some landmarks in any order. Always is the "G" LTL operator. "explore" specifies we must "always visit a, b, and c". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Fa & Fb & Fc & Fd & G(!Fa & !Fb & !Fc & !Fd), & G F a & G F b & G F c G F d, patrolling, 4, Avoid visiting landmarks c, a, d, and b a finite number of times., We must eventually visit some landmarks in any order, but avoid visiting certain landmarks a finite number of times. Eventually is the "F" LTL operator. "avoid" specifies we must "eventually visit a, b, c, and d" but not more than a finite number of times. Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & G(!Fa & !Fb & !Fc & !Fd)".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit landmarks b, c, d, and a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always explore b, a, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "explore" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, You must infinitely visit landmarks d, c, a, and b., We must infinitely visit some landmarks in any order. Infinitely is the "G" LTL operator. "visit" specifies we must "infinitely visit a, b, c, and d". Examining each part, "infinitely visit a" is "Ga". "infinitely visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit c, a, d, h, and b repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Visit landmarks a, b, h, d, and c repeatedly without any restrictions., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, You must always go to landmarks d, c, h, b, and a., We must always visit some landmarks in any order. Always is the "G" LTL operator. "go to" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, You must continuously visit landmarks c, a, h, b, and d., We must continuously visit some landmarks in any order. Continuously is the "G" LTL operator. "visit" specifies we must "continuously visit a, b, c, d, and h". Examining each part, "continuously visit a" is "Ga". "continuously visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, You must always explore landmarks a, b, c, d, and h., We must always visit some landmarks in any order. Always is the "G" LTL operator. "explore" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Fa & Fb & Fc & Fd, & G F a & G F b & G F c G F d, patrolling, 4, Visit landmarks a, b, c, and d in any order., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d in any order repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Continuously visit landmarks a, b, c, and d in any order., We must continuously visit some landmarks in any order. Continuously is the "G" LTL operator. "visit" specifies we must "continuously visit a, b, c, and d". Examining each part, "continuously visit a" is "Ga". "continuously visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit landmarks a, b, c, and d in any order without stopping., We must always visit some landmarks in any order without stopping. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h. The order of the visits does not matter., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Fa & Fb & Fc & Fd & Fh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Visit landmarks a, b, c, d, and h in any order., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visit" specifies we must "eventually visit a, b, c, d, and h". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd & Fh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h in any order repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Continuously visit landmarks a, b, c, d, and h in any order., We must continuously visit some landmarks in any order. Continuously is the "G" LTL operator. "visit" specifies we must "continuously visit a, b, c, d, and h". Examining each part, "continuously visit a" is "Ga". "continuously visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h in any order., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark A, then landmark B, then landmark C, then landmark D, and finally landmark H. Do not revisit any of the landmarks before completing the task., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark A, then visit landmark B without revisiting A before. After visiting B, visit landmark C without revisiting A or B before. After visiting C, visit landmark D without revisiting A, B, or C before. Finally, after visiting D, visit landmark H without revisiting A, B, C, or D before., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without revisiting" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark A, then landmark B, then landmark C, then landmark D, and finally landmark H. Only visit landmark D after visiting landmark C once. Only visit landmark C after visiting landmark B once. Only visit landmark B after visiting landmark A once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit a, then visit b without returning to a. After visiting b, visit c without returning to b. After visiting c, visit d without returning to c. Only then, visit h without returning to d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without returning" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks a, b, c, d, and h in the exact order given. You cannot revisit any location once you leave it., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exact order given" and "cannot revisit any location once you leave it" specify we only visit one landmark after visiting another and we cannot revisit any landmark. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

G(a -> Fb) & G(b -> Fa), & G F a G F b, patrolling, 2, Infinitely alternate between visiting landmarks a and b., We must infinitely alternate between visiting some landmarks in any order. Eventually is the "F" LTL operator. "Infinitely alternate" specifies we must "infinitely alternate between visiting a and b". Examining each part, "infinitely alternate between visiting a and b" is "G(a -> Fb) & G(b -> Fa)". There are 2 landmarks so we are done. The answer is "G(a -> Fb) & G(b -> Fa)".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Fa & Fb, & G F a G F b, patrolling, 2, Keep visiting landmarks a and b in any order., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "visiting" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit landmarks a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga, G F a, patrolling, 1, Always visit a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga, G F a, patrolling, 1, Always visit a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

G, G F a, patrolling, 1, Always visit., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit". Examining each part, "always visit" is "G". The answer is "G".

Ga, G F a, patrolling, 1, Always visit a., We must always visit some landmarks. Always is the "G" LTL operator. "visit" specifies we must "always visit a". Examining each part, "always visit a" is "Ga". There is 1 landmark so we are done. The answer is "Ga".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit landmarks a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Visit landmarks a and b frequently in any order., We must frequently visit some landmarks in any order. Frequently is the "G" LTL operator. "visit" specifies we must "frequently visit a and b". Examining each part, "frequently visit a" is "Ga". "frequently visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Fa & Fb, & G F a G F b, patrolling, 2, Move repeatedly between landmarks a and b., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Move" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit a, then visit b, then visit c, then visit d, and finally visit h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit a, then visit b, then visit c, then visit d, and finally visit h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Move to a, then move to b, then move to c, then move to d, and finally move to h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, First, visit landmark a. Then, move to landmark b. After that, visit landmark c. Next, visit landmark d. Finally, reach landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", "After that", "Next", and "Finally" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmark a, then landmark b, then landmark c, then landmark d, and finally landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, First, visit landmark a and never visit it again. Then, visit landmark b before visiting landmarks c, d, and h, and never visit b again. Do not visit d or h until you have visited c, and never visit c again. Next, visit landmark d before visiting h, and never visit d or h again. Finally, visit landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", "Next", and "Finally" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

Fa & Fb & G(!a & !b), & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit a, then visit b, and make sure to visit each location once., We must eventually visit some landmarks in any order, but make sure to visit each location once. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a and b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". We must also make sure to visit each location once, which is the "G" LTL operator. "visit each location once" is "G(!a & !b)". There are 2 landmarks so we are done. The answer is "Fa & Fb & G(!a & !b)".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark a exactly once, then eventually visit landmark b. Do not visit b before visiting a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "do not visit" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit a once, then visit b only after visiting a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

G(a & !a) & (!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark a exactly once, then visit landmark b, ensuring that you do not visit b before visiting a., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "exactly once" and "ensuring" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit a exactly once" is "G(a & !a)". "eventually visit b" is "Fb". The answer is "G(a & !a) & (!b U a) & Fb".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then visit b, then visit c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, go to landmark a. Then, visit landmark b. Finally, reach landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, go to landmark A. Then, go to landmark B. After that, go to landmark C., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", and "After that" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit b after visiting a and visit c after visiting b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specifies we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, reach a. Then, reach b. Finally, reach c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit a, then visit b, then visit c, and finally visit d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmark a, then landmark b, then landmark c, and finally landmark d in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Gb & Gc & Gd & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit a, then visit b at least once. After visiting b at least once, visit c at least once. After visiting a, b, and c, visit d at least once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "at least once" specifies we must visit a landmark at least once. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit b at least once" is "Gb". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Gb & Gc & Gd & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Reach a, then reach b, then reach c, and finally reach d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmarks a, b, c, and d in sequence., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit landmarks a and b repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

Ga & Gb, & G F a G F b, patrolling, 2, Always visit a and b., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a and b". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". There are 2 landmarks so we are done. The answer is "Ga & Gb".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmark a, then landmark b, then landmark c, then landmark d, and finally landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmark a, then landmark b. After visiting landmark b, visit landmark c. Once you have visited landmark c, proceed to landmark d. After visiting landmark d, make your way to landmark h and remain there., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" and "once" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmarks a, b, c, d, and h in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmark a, then visit landmark b. After visiting landmark b, visit landmark c. Once you have visited landmark c, visit landmark d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" and "once" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmark a, then landmark b, then landmark c, and finally landmark d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmark a, then landmark b, then landmark c, and finally landmark d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Move to a, then to b, then to c, and finally to d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit landmark a, then landmark b, then landmark c, and finally landmark d in sequence., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in sequence" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit a, then visit b, then visit c, and finally visit d. Visit each location only once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & a & b & c & d, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmark a exactly once without passing through landmark b. Then, visit landmark b exactly once without passing through landmark c. Finally, after visiting landmark c exactly once, visit landmark d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without passing through" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "visit a exactly once" is "a". "visit b exactly once" is "b". "visit c exactly once" is "c". "visit d exactly once" is "d". The answer is "(!b U a) & (!c U b) & (!d U c) & a & b & c & d".

(!b U a) & (!c U b) & (!d U c) & Fd & X(a & b & c & d), & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmarks a, b, c, and d exactly once. Always visit b after visiting a and always visit b after visiting c. Always visit d after visiting c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "always" and "exactly once" specify we only visit one landmark after visiting another and that we must visit each landmark exactly once. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd & X(a & b & c & d)".

(!b U a) & (!c U b) & (!d U c) & GFd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit a, then b, then c, then d in strict order without revisiting any location., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in strict order" and "without revisiting any location" specify we only visit one landmark after visiting another and we cannot revisit any landmark. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & GFd".

, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, then b, then c, then d, and repeat this sequence infinitely., We must eventually visit some landmarks in a certain order and repeat this sequence infinitely. Eventually is the "F" LTL operator. "Always" specifies we must visit the landmarks in a certain order and repeat this sequence infinitely. Examining each part, "visit a" is "a". "visit b" is "b". Repeat for the remaining parts. The answer is "a U b U c U d U (a U b U c U d U ...)".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit a, b, c, and d repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd, & G F a & G F b & G F c G F d, patrolling, 4, Always visit landmarks a, b, c, and d., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, and d". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit a, b, c, d, and h., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit landmarks a, b, c, d, and h., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

Ga & Gb & Gc & Gd & Gh, & G F a & G F b & G F c & G F d G F h, patrolling, 5, Always visit a, b, c, d, and h repeatedly., We must always visit some landmarks in any order. Always is the "G" LTL operator. "visit" specifies we must "always visit a, b, c, d, and h". Examining each part, "always visit a" is "Ga". "always visit b" is "Gb". Repeat for the remaining parts. The answer is "Ga & Gb & Gc & Gd & Gh".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmark a, then landmark b, then landmark c, and finally landmark d, in that specific order, without revisiting any previously visited location., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that specific order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, First, visit landmark a without stopping at landmark b. Then, visit landmark b without stopping at landmark c. After that, visit landmark c without stopping at landmark d. Finally, visit landmark d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without stopping" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & !c & !d & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, First, visit landmark a once. Then, visit landmark b once while avoiding landmark c. After that, visit landmark c once while avoiding landmark d. Finally, visit landmark d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", "After that", and "Finally" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "avoid c" is "!c". "avoid d" is "!d". The answer is "(!b U a) & (!c U b) & (!d U c) & !c & !d & Fd".

(!b U a) & (!c U b) & (!d U c) & (!d U b) & (!d U a) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit a, then visit b without visiting c, then visit c without visiting d, and finally visit d while only visiting each location once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without visiting" and "while only visiting each location once" specify we only visit one landmark after visiting another and we cannot visit a landmark twice. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & (!d U b) & (!d U a) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d, strictly_ordered_visit, 4, Visit landmark a, then landmark b, then landmark c, and finally landmark d, in that strict order, without returning to any previously visited locations., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that strict order" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, reach landmark a. Then, reach landmark b without revisiting landmark a. Finally, reach landmark c without revisiting landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, visit landmark a once. Then, visit landmark b once while avoiding landmark c. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & (!b W a) & (!c W b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, Visit landmark A, then visit landmark B, and finally visit landmark C. While visiting landmark A, stay away from landmark B. While visiting landmark B, stay away from landmark C., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while" specifies we must stay away from one landmark while visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a and we must stay away from b while visiting a and we must stay away from c while visiting b". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "stay away from b while visiting a" is "(!b W a)". "stay away from c while visiting b" is "(!c W b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & (!b W a) & (!c W b) & Fc".

(!b U a) & (!c U b) & (!a & !b) & Fc, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, visit landmark a. Then, visit landmark b. After that, visit landmark c while making sure to only visit landmarks a and b once each., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "After that" specifies we must visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "visit a and b only once each" is "(!a & !b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & (!a & !b) & Fc".

(!b U a) & (!c U b) & Fc & !a & !b, & & U ! b a & U ! c b F c & U ! a U a U ! a b U ! b U b U ! b c, strictly_ordered_visit, 3, First, visit landmark a. Then, visit landmark b. After visiting b, do not visit a again. Next, visit landmark c. After visiting c, do not visit b again., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", and "Next" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". "do not visit a again" is "!a". "do not visit b again" is "!b". The answer is "(!b U a) & (!c U b) & Fc & !a & !b".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, go to landmark a. Then, go to landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, After visiting a, go to b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "After" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, go to landmark a. Then, eventually go to landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, First, travel to landmark a. Then, make your way to landmark b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & Fb, F & a F b, sequenced_visit, 2, Visit a and then visit b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Visit a, then visit b, then visit c, then visit d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Travel from a to b to c to d, ensuring that you visit b after a, c after b, and d after c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

Fa & Fb & Fc & Fd, F & a F & b F & c F d, sequenced_visit, 4, Travel to a, then travel to b, then go to c, and finally reach d., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "travel to" specifies we must "eventually visit a, b, c, and d". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". Repeat for the remaining parts. The answer is "Fa & Fb & Fc & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, Travel from a to b, then from b to c, and finally from c to d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & Fd, F & a F & b F & c F d, sequenced_visit, 4, First, visit landmark a. Then, visit landmark b. After that, move to landmark c. Finally, reach landmark d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", "After that", and "Finally" specify we only visit one landmark after visiting another. "We eventually visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit d" is "Fd". The answer is "(!b U a) & (!c U b) & (!d U c) & Fd".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit a, then visit b. After visiting b, visit c. After visiting c, visit d. Finally, visit h after visiting d., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit a, then visit b, then visit c, then visit d, and finally visit h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d), F & a F & b F & c F & d F h, sequenced_visit, 5, Visit landmarks a, b, c, d, and h in that order., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "in that order" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d)".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, First, visit landmark a. Then, visit landmark b. After visiting a, visit c. After visiting b, visit d. Finally, after visiting d, visit landmark h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First", "Then", and "After" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, F & a F & b F & c F & d F h, sequenced_visit, 5, Visit a, then visit b, then visit c, then visit d, and finally visit h., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & Fb & Ga & Gb & Gc & Gd & Gh, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit a first. Then, visit b. Only visit each location once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "first" and "then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". We must also ensure we only visit each location once. This is done with the "G" LTL operator. "visit each location once" is "Ga & Gb & Gc & Gd & Gh". The answer is "(!b U a) & Fb & Ga & Gb & Gc & Gd & Gh".

(!B U A) & FB, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, First, visit A without stopping at B. Then, visit B., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit B but not until we visit A". Examining each part, "visit B but not until visit A" is "(!B U A)". "eventually visit B" is "FB". The answer is "(!B U A) & FB".

(!b U a) & Fb & (!a U b), & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, First, go to landmark "a". Then, go to landmark "b" without visiting landmark "a" again., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a and we cannot visit a again". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb & (!a U b)".

Fa & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Visit landmark a once and then reach landmark b., We must eventually visit some landmarks in any order. Eventually is the "F" LTL operator. "Visit" specifies we must "eventually visit a". "Reach" specifies we must "eventually visit b". Examining each part, "eventually visit a" is "Fa". "eventually visit b" is "Fb". There are 2 landmarks so we are done. The answer is "Fa & Fb".

(!b U a) & Fb, & & U ! b a F b U ! a U a U ! a b, strictly_ordered_visit, 2, Go to a, avoiding b. Then go to b, but only after visiting a once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "only after" specify we only visit one landmark after visiting another. "We eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "eventually visit b" is "Fb". The answer is "(!b U a) & Fb".

ed onc, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark a, then landmark b, then landmark c, then landmark d, and finally landmark h. You can only visit each landmark once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d & !h)". The additional part "G(!a & !b & !c & !d & !h)" specifies that each landmark can only be visited once.

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit a while avoiding b. Then, visit b while avoiding c. After that, visit c while avoiding d. Next, visit d while avoiding h. Finally, visit h. Make sure to visit each location only once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "while avoiding" specifies we must visit one landmark before visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmark A once, then landmark B once without visiting C, then landmark C once without visiting D, then landmark D once without visiting H, and finally visit landmark H., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "once" and "without visiting" specify we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh".

(!X U X) & FX, & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, Visit landmarks in sequence while staying away from the next landmark until reaching the final landmark without revisiting any previous landmarks., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first and we cannot revisit any previous landmarks. Eventually is the "F" LTL operator. "in sequence" and "staying away from the next landmark" specify we only visit one landmark after visiting another. "We eventually visit the final landmark but not until we visit the previous landmark and we cannot revisit any previous landmarks". Examining each part, "visit the previous landmark but not until visit the previous landmark" is "(!X U X)". "eventually visit the final landmark" is "FX". The answer is "(!X U X) & FX".

(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d), & & U ! b a & U ! c b & U ! d c & U ! h d F h & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d U ! d U d U ! d h, strictly_ordered_visit, 5, First, go to landmark A without stopping at landmark B. Then, proceed to landmark B without stopping at landmark C. After that, go to landmark C without stopping at landmark D. Next, go to landmark D without stopping at landmark H. Finally, go to landmark H and visit landmarks A, B, C, and D only once., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "without stopping" specifies we only visit one landmark after visiting another. "We eventually visit h but not until we visit d and we visit d but not until we visit c and we visit c but not until we visit b and we eventually visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". Repeat for the remaining parts. "eventually visit h" is "Fh". The answer is "(!b U a) & (!c U b) & (!d U c) & (!h U d) & Fh & G(!a & !b & !c & !d)".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, visit landmark b. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then visit b, then visit c. Make sure to visit b after a and visit c after b., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "after" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, reach a. Then, reach b. Finally, reach c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, Visit a, then go to b, and finally make your way to c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "then" and "finally" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

(!b U a) & (!c U b) & Fc, F & a F & b F c, sequenced_visit, 3, First, visit landmark a. Then, proceed to landmark b. Finally, visit landmark c., We eventually visit some landmarks in a certain order while we cannot visit some landmarks until we visit others first. Eventually is the "F" LTL operator. "First" and "Then" specify we only visit one landmark after visiting another. "We eventually visit c but not until we visit b and we visit b but not until we visit a". Examining each part, "visit b but not until visit a" is "(!b U a)". "visit c but not until visit b" is "(!c U b)". "eventually visit c" is "Fc". The answer is "(!b U a) & (!c U b) & Fc".

Accuracy: 0.01910828025477707